package com.sgs.ics.model.bc.entity;

import com.sgs.ics.model.bc.am.SGSAppModuleImpl;

import com.sgs.ics.model.bc.commonutils.CommonUtils;

import java.math.BigDecimal;

import java.sql.Date;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Dec 07 09:30:04 IST 2022
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SgsBusinessUnitMasterEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        BuSeq,
        BussinessUnitId,
        BussinessUnitName,
        LegalEntity,
        BussinessUnitGeography,
        BussinessUnitZone,
        BusinessControllers,
        BussinessUnitStatus,
        AlternateBu,
        FunctionalCurrency,
        SubLedgerApplicability,
        IcoSupplierName,
        IcoCustomerName,
        OperatingUnit,
        GstRegNum,
        CollectionBu,
        PayingBu,
        DepartmentId,
        CreatedDate,
        CreatedBy,
        UpdatedDate,
        UpdatedBy,
        Attribute1,
        Attribute2,
        Attribute3,
        Attribute4,
        Attribute5,
        Attribute6,
        Attribute7,
        Attribute8,
        Attribute9,
        Attribute10,
        Attribute11,
        Attribute12,
        Attribute13,
        Attribute14,
        Attribute15,
        EFFECTIVEENDDATE,
        EFFECTIVESTARTDATE;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    private static final ADFLogger LOG = ADFLogger.createADFLogger(SgsBusinessUnitMasterEOImpl.class);

    public static final int BUSEQ = AttributesEnum.BuSeq.index();
    public static final int BUSSINESSUNITID = AttributesEnum.BussinessUnitId.index();
    public static final int BUSSINESSUNITNAME = AttributesEnum.BussinessUnitName.index();
    public static final int LEGALENTITY = AttributesEnum.LegalEntity.index();
    public static final int BUSSINESSUNITGEOGRAPHY = AttributesEnum.BussinessUnitGeography.index();
    public static final int BUSSINESSUNITZONE = AttributesEnum.BussinessUnitZone.index();
    public static final int BUSINESSCONTROLLERS = AttributesEnum.BusinessControllers.index();
    public static final int BUSSINESSUNITSTATUS = AttributesEnum.BussinessUnitStatus.index();
    public static final int ALTERNATEBU = AttributesEnum.AlternateBu.index();
    public static final int FUNCTIONALCURRENCY = AttributesEnum.FunctionalCurrency.index();
    public static final int SUBLEDGERAPPLICABILITY = AttributesEnum.SubLedgerApplicability.index();
    public static final int ICOSUPPLIERNAME = AttributesEnum.IcoSupplierName.index();
    public static final int ICOCUSTOMERNAME = AttributesEnum.IcoCustomerName.index();
    public static final int OPERATINGUNIT = AttributesEnum.OperatingUnit.index();
    public static final int GSTREGNUM = AttributesEnum.GstRegNum.index();
    public static final int COLLECTIONBU = AttributesEnum.CollectionBu.index();
    public static final int PAYINGBU = AttributesEnum.PayingBu.index();
    public static final int DEPARTMENTID = AttributesEnum.DepartmentId.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int UPDATEDDATE = AttributesEnum.UpdatedDate.index();
    public static final int UPDATEDBY = AttributesEnum.UpdatedBy.index();
    public static final int ATTRIBUTE1 = AttributesEnum.Attribute1.index();
    public static final int ATTRIBUTE2 = AttributesEnum.Attribute2.index();
    public static final int ATTRIBUTE3 = AttributesEnum.Attribute3.index();
    public static final int ATTRIBUTE4 = AttributesEnum.Attribute4.index();
    public static final int ATTRIBUTE5 = AttributesEnum.Attribute5.index();
    public static final int ATTRIBUTE6 = AttributesEnum.Attribute6.index();
    public static final int ATTRIBUTE7 = AttributesEnum.Attribute7.index();
    public static final int ATTRIBUTE8 = AttributesEnum.Attribute8.index();
    public static final int ATTRIBUTE9 = AttributesEnum.Attribute9.index();
    public static final int ATTRIBUTE10 = AttributesEnum.Attribute10.index();
    public static final int ATTRIBUTE11 = AttributesEnum.Attribute11.index();
    public static final int ATTRIBUTE12 = AttributesEnum.Attribute12.index();
    public static final int ATTRIBUTE13 = AttributesEnum.Attribute13.index();
    public static final int ATTRIBUTE14 = AttributesEnum.Attribute14.index();
    public static final int ATTRIBUTE15 = AttributesEnum.Attribute15.index();
    public static final int EFFECTIVEENDDATE = AttributesEnum.EFFECTIVEENDDATE.index();
    public static final int EFFECTIVESTARTDATE = AttributesEnum.EFFECTIVESTARTDATE.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SgsBusinessUnitMasterEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("com.sgs.ics.model.bc.entity.SgsBusinessUnitMasterEO");
    }


    /**
     * Gets the attribute value for BuSeq, using the alias name BuSeq.
     * @return the value of BuSeq
     */
    public Integer getBuSeq() {
        return (Integer) getAttributeInternal(BUSEQ);
    }

    /**
     * Sets <code>value</code> as the attribute value for BuSeq.
     * @param value value to set the BuSeq
     */
    public void setBuSeq(Integer value) {
        setAttributeInternal(BUSEQ, value);
    }

    /**
     * Gets the attribute value for BussinessUnitId, using the alias name BussinessUnitId.
     * @return the value of BussinessUnitId
     */
    public String getBussinessUnitId() {
        return (String) getAttributeInternal(BUSSINESSUNITID);
    }

    /**
     * Sets <code>value</code> as the attribute value for BussinessUnitId.
     * @param value value to set the BussinessUnitId
     */
    public void setBussinessUnitId(String value) {
        setAttributeInternal(BUSSINESSUNITID, value);
    }

    /**
     * Gets the attribute value for BussinessUnitName, using the alias name BussinessUnitName.
     * @return the value of BussinessUnitName
     */
    public String getBussinessUnitName() {
        return (String) getAttributeInternal(BUSSINESSUNITNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for BussinessUnitName.
     * @param value value to set the BussinessUnitName
     */
    public void setBussinessUnitName(String value) {
        setAttributeInternal(BUSSINESSUNITNAME, value);
    }

    /**
     * Gets the attribute value for LegalEntity, using the alias name LegalEntity.
     * @return the value of LegalEntity
     */
    public String getLegalEntity() {
        return (String) getAttributeInternal(LEGALENTITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LegalEntity.
     * @param value value to set the LegalEntity
     */
    public void setLegalEntity(String value) {
        setAttributeInternal(LEGALENTITY, value);
    }

    /**
     * Gets the attribute value for BussinessUnitGeography, using the alias name BussinessUnitGeography.
     * @return the value of BussinessUnitGeography
     */
    public String getBussinessUnitGeography() {
        return (String) getAttributeInternal(BUSSINESSUNITGEOGRAPHY);
    }

    /**
     * Sets <code>value</code> as the attribute value for BussinessUnitGeography.
     * @param value value to set the BussinessUnitGeography
     */
    public void setBussinessUnitGeography(String value) {
        setAttributeInternal(BUSSINESSUNITGEOGRAPHY, value);
    }

    /**
     * Gets the attribute value for BussinessUnitZone, using the alias name BussinessUnitZone.
     * @return the value of BussinessUnitZone
     */
    public String getBussinessUnitZone() {
        return (String) getAttributeInternal(BUSSINESSUNITZONE);
    }

    /**
     * Sets <code>value</code> as the attribute value for BussinessUnitZone.
     * @param value value to set the BussinessUnitZone
     */
    public void setBussinessUnitZone(String value) {
        setAttributeInternal(BUSSINESSUNITZONE, value);
    }

    /**
     * Gets the attribute value for BusinessControllers, using the alias name BusinessControllers.
     * @return the value of BusinessControllers
     */
    public String getBusinessControllers() {
        return (String) getAttributeInternal(BUSINESSCONTROLLERS);
    }

    /**
     * Sets <code>value</code> as the attribute value for BusinessControllers.
     * @param value value to set the BusinessControllers
     */
    public void setBusinessControllers(String value) {
        setAttributeInternal(BUSINESSCONTROLLERS, value);
    }

    /**
     * Gets the attribute value for BussinessUnitStatus, using the alias name BussinessUnitStatus.
     * @return the value of BussinessUnitStatus
     */
    public String getBussinessUnitStatus() {
        return (String) getAttributeInternal(BUSSINESSUNITSTATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for BussinessUnitStatus.
     * @param value value to set the BussinessUnitStatus
     */
    public void setBussinessUnitStatus(String value) {
        setAttributeInternal(BUSSINESSUNITSTATUS, value);
    }

    /**
     * Gets the attribute value for AlternateBu, using the alias name AlternateBu.
     * @return the value of AlternateBu
     */
    public String getAlternateBu() {
        return (String) getAttributeInternal(ALTERNATEBU);
    }

    /**
     * Sets <code>value</code> as the attribute value for AlternateBu.
     * @param value value to set the AlternateBu
     */
    public void setAlternateBu(String value) {
        setAttributeInternal(ALTERNATEBU, value);
    }

    /**
     * Gets the attribute value for FunctionalCurrency, using the alias name FunctionalCurrency.
     * @return the value of FunctionalCurrency
     */
    public String getFunctionalCurrency() {
        return (String) getAttributeInternal(FUNCTIONALCURRENCY);
    }

    /**
     * Sets <code>value</code> as the attribute value for FunctionalCurrency.
     * @param value value to set the FunctionalCurrency
     */
    public void setFunctionalCurrency(String value) {
        setAttributeInternal(FUNCTIONALCURRENCY, value);
    }

    /**
     * Gets the attribute value for SubLedgerApplicability, using the alias name SubLedgerApplicability.
     * @return the value of SubLedgerApplicability
     */
    public String getSubLedgerApplicability() {
        return (String) getAttributeInternal(SUBLEDGERAPPLICABILITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for SubLedgerApplicability.
     * @param value value to set the SubLedgerApplicability
     */
    public void setSubLedgerApplicability(String value) {
        setAttributeInternal(SUBLEDGERAPPLICABILITY, value);
    }

    /**
     * Gets the attribute value for IcoSupplierName, using the alias name IcoSupplierName.
     * @return the value of IcoSupplierName
     */
    public String getIcoSupplierName() {
        return (String) getAttributeInternal(ICOSUPPLIERNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for IcoSupplierName.
     * @param value value to set the IcoSupplierName
     */
    public void setIcoSupplierName(String value) {
        setAttributeInternal(ICOSUPPLIERNAME, value);
    }

    /**
     * Gets the attribute value for IcoCustomerName, using the alias name IcoCustomerName.
     * @return the value of IcoCustomerName
     */
    public String getIcoCustomerName() {
        return (String) getAttributeInternal(ICOCUSTOMERNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for IcoCustomerName.
     * @param value value to set the IcoCustomerName
     */
    public void setIcoCustomerName(String value) {
        setAttributeInternal(ICOCUSTOMERNAME, value);
    }

    /**
     * Gets the attribute value for OperatingUnit, using the alias name OperatingUnit.
     * @return the value of OperatingUnit
     */
    public String getOperatingUnit() {
        return (String) getAttributeInternal(OPERATINGUNIT);
    }

    /**
     * Sets <code>value</code> as the attribute value for OperatingUnit.
     * @param value value to set the OperatingUnit
     */
    public void setOperatingUnit(String value) {
        setAttributeInternal(OPERATINGUNIT, value);
    }

    /**
     * Gets the attribute value for GstRegNum, using the alias name GstRegNum.
     * @return the value of GstRegNum
     */
    public String getGstRegNum() {
        return (String) getAttributeInternal(GSTREGNUM);
    }

    /**
     * Sets <code>value</code> as the attribute value for GstRegNum.
     * @param value value to set the GstRegNum
     */
    public void setGstRegNum(String value) {
        setAttributeInternal(GSTREGNUM, value);
    }

    /**
     * Gets the attribute value for CollectionBu, using the alias name CollectionBu.
     * @return the value of CollectionBu
     */
    public String getCollectionBu() {
        return (String) getAttributeInternal(COLLECTIONBU);
    }

    /**
     * Sets <code>value</code> as the attribute value for CollectionBu.
     * @param value value to set the CollectionBu
     */
    public void setCollectionBu(String value) {
        setAttributeInternal(COLLECTIONBU, value);
    }

    /**
     * Gets the attribute value for PayingBu, using the alias name PayingBu.
     * @return the value of PayingBu
     */
    public String getPayingBu() {
        return (String) getAttributeInternal(PAYINGBU);
    }

    /**
     * Sets <code>value</code> as the attribute value for PayingBu.
     * @param value value to set the PayingBu
     */
    public void setPayingBu(String value) {
        setAttributeInternal(PAYINGBU, value);
    }

    /**
     * Gets the attribute value for DepartmentId, using the alias name DepartmentId.
     * @return the value of DepartmentId
     */
    public String getDepartmentId() {
        return (String) getAttributeInternal(DEPARTMENTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DepartmentId.
     * @param value value to set the DepartmentId
     */
    public void setDepartmentId(String value) {
        setAttributeInternal(DEPARTMENTID, value);
    }


    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the value of CreatedDate
     */
    public Date getCreatedDate() {
        return (Date) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }
    
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for UpdatedDate, using the alias name UpdatedDate.
     * @return the value of UpdatedDate
     */
    public Date getUpdatedDate() {
        return (Date) getAttributeInternal(UPDATEDDATE);
    }

    /**
     * Gets the attribute value for UpdatedBy, using the alias name UpdatedBy.
     * @return the value of UpdatedBy
     */
    public String getUpdatedBy() {
        return (String) getAttributeInternal(UPDATEDBY);
    }
    
    public void setUpdatedBy(String value) {
        setAttributeInternal(UPDATEDBY, value);
    }

    /**
     * Gets the attribute value for Attribute1, using the alias name Attribute1.
     * @return the value of Attribute1
     */
    public String getAttribute1() {
        return (String) getAttributeInternal(ATTRIBUTE1);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute1.
     * @param value value to set the Attribute1
     */
    public void setAttribute1(String value) {
        setAttributeInternal(ATTRIBUTE1, value);
    }

    /**
     * Gets the attribute value for Attribute2, using the alias name Attribute2.
     * @return the value of Attribute2
     */
    public String getAttribute2() {
        return (String) getAttributeInternal(ATTRIBUTE2);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute2.
     * @param value value to set the Attribute2
     */
    public void setAttribute2(String value) {
        setAttributeInternal(ATTRIBUTE2, value);
    }

    /**
     * Gets the attribute value for Attribute3, using the alias name Attribute3.
     * @return the value of Attribute3
     */
    public String getAttribute3() {
        return (String) getAttributeInternal(ATTRIBUTE3);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute3.
     * @param value value to set the Attribute3
     */
    public void setAttribute3(String value) {
        setAttributeInternal(ATTRIBUTE3, value);
    }

    /**
     * Gets the attribute value for Attribute4, using the alias name Attribute4.
     * @return the value of Attribute4
     */
    public String getAttribute4() {
        return (String) getAttributeInternal(ATTRIBUTE4);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute4.
     * @param value value to set the Attribute4
     */
    public void setAttribute4(String value) {
        setAttributeInternal(ATTRIBUTE4, value);
    }

    /**
     * Gets the attribute value for Attribute5, using the alias name Attribute5.
     * @return the value of Attribute5
     */
    public String getAttribute5() {
        return (String) getAttributeInternal(ATTRIBUTE5);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute5.
     * @param value value to set the Attribute5
     */
    public void setAttribute5(String value) {
        setAttributeInternal(ATTRIBUTE5, value);
    }

    /**
     * Gets the attribute value for Attribute6, using the alias name Attribute6.
     * @return the value of Attribute6
     */
    public Date getAttribute6() {
        return (Date) getAttributeInternal(ATTRIBUTE6);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute6.
     * @param value value to set the Attribute6
     */
    public void setAttribute6(Date value) {
        setAttributeInternal(ATTRIBUTE6, value);
    }

    /**
     * Gets the attribute value for Attribute7, using the alias name Attribute7.
     * @return the value of Attribute7
     */
    public Date getAttribute7() {
        return (Date) getAttributeInternal(ATTRIBUTE7);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute7.
     * @param value value to set the Attribute7
     */
    public void setAttribute7(Date value) {
        setAttributeInternal(ATTRIBUTE7, value);
    }

    /**
     * Gets the attribute value for Attribute8, using the alias name Attribute8.
     * @return the value of Attribute8
     */
    public Date getAttribute8() {
        return (Date) getAttributeInternal(ATTRIBUTE8);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute8.
     * @param value value to set the Attribute8
     */
    public void setAttribute8(Date value) {
        setAttributeInternal(ATTRIBUTE8, value);
    }

    /**
     * Gets the attribute value for Attribute9, using the alias name Attribute9.
     * @return the value of Attribute9
     */
    public Date getAttribute9() {
        return (Date) getAttributeInternal(ATTRIBUTE9);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute9.
     * @param value value to set the Attribute9
     */
    public void setAttribute9(Date value) {
        setAttributeInternal(ATTRIBUTE9, value);
    }

    /**
     * Gets the attribute value for Attribute10, using the alias name Attribute10.
     * @return the value of Attribute10
     */
    public Date getAttribute10() {
        return (Date) getAttributeInternal(ATTRIBUTE10);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute10.
     * @param value value to set the Attribute10
     */
    public void setAttribute10(Date value) {
        setAttributeInternal(ATTRIBUTE10, value);
    }

    /**
     * Gets the attribute value for Attribute11, using the alias name Attribute11.
     * @return the value of Attribute11
     */
    public BigDecimal getAttribute11() {
        return (BigDecimal) getAttributeInternal(ATTRIBUTE11);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute11.
     * @param value value to set the Attribute11
     */
    public void setAttribute11(BigDecimal value) {
        setAttributeInternal(ATTRIBUTE11, value);
    }

    /**
     * Gets the attribute value for Attribute12, using the alias name Attribute12.
     * @return the value of Attribute12
     */
    public BigDecimal getAttribute12() {
        return (BigDecimal) getAttributeInternal(ATTRIBUTE12);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute12.
     * @param value value to set the Attribute12
     */
    public void setAttribute12(BigDecimal value) {
        setAttributeInternal(ATTRIBUTE12, value);
    }

    /**
     * Gets the attribute value for Attribute13, using the alias name Attribute13.
     * @return the value of Attribute13
     */
    public BigDecimal getAttribute13() {
        return (BigDecimal) getAttributeInternal(ATTRIBUTE13);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute13.
     * @param value value to set the Attribute13
     */
    public void setAttribute13(BigDecimal value) {
        setAttributeInternal(ATTRIBUTE13, value);
    }

    /**
     * Gets the attribute value for Attribute14, using the alias name Attribute14.
     * @return the value of Attribute14
     */
    public BigDecimal getAttribute14() {
        return (BigDecimal) getAttributeInternal(ATTRIBUTE14);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute14.
     * @param value value to set the Attribute14
     */
    public void setAttribute14(BigDecimal value) {
        setAttributeInternal(ATTRIBUTE14, value);
    }

    /**
     * Gets the attribute value for Attribute15, using the alias name Attribute15.
     * @return the value of Attribute15
     */
    public BigDecimal getAttribute15() {
        return (BigDecimal) getAttributeInternal(ATTRIBUTE15);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute15.
     * @param value value to set the Attribute15
     */
    public void setAttribute15(BigDecimal value) {
        setAttributeInternal(ATTRIBUTE15, value);
    }


    /**
     * Gets the attribute value for EFFECTIVEENDDATE, using the alias name EFFECTIVEENDDATE.
     * @return the value of EFFECTIVEENDDATE
     */
    public Date getEFFECTIVEENDDATE() {
        return (Date) getAttributeInternal(EFFECTIVEENDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for EFFECTIVEENDDATE.
     * @param value value to set the EFFECTIVEENDDATE
     */
    public void setEFFECTIVEENDDATE(Date value) {
        setAttributeInternal(EFFECTIVEENDDATE, value);
    }

    /**
     * Gets the attribute value for EFFECTIVESTARTDATE, using the alias name EFFECTIVESTARTDATE.
     * @return the value of EFFECTIVESTARTDATE
     */
    public Date getEFFECTIVESTARTDATE() {
        return (Date) getAttributeInternal(EFFECTIVESTARTDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for EFFECTIVESTARTDATE.
     * @param value value to set the EFFECTIVESTARTDATE
     */
    public void setEFFECTIVESTARTDATE(Date value) {
        setAttributeInternal(EFFECTIVESTARTDATE, value);
    }

    /**
     * @param bussinessUnitId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String bussinessUnitId) {
        return new Key(new Object[] { bussinessUnitId });
    }

 
    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);        
        try {
            SGSAppModuleImpl am = new SGSAppModuleImpl();
            setBuSeq(am.getDBSequence1("SEQ_SGS_BUSINESS_UNIT_MASTER"));
            CommonUtils util = new CommonUtils();
            Object user = (Object) util.getSessionScopeValue("_username").toString();
            setCreatedBy(user.toString());
        } catch (Exception e) {
            LOG.severe(e);
        }
    }
    
    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if (operation == DML_UPDATE) {
            CommonUtils util= new CommonUtils();
            Object user= (Object)util.getSessionScopeValue("_username").toString();
            setUpdatedBy(user.toString());
           
        }
        
        super.doDML(operation, e);
    }
}

