package com.sgs.ics.model.bc.entity;

import com.sgs.ics.model.bc.am.SGSAppModuleImpl;
import com.sgs.ics.model.bc.commonutils.CommonUtils;

import java.math.BigDecimal;

import java.sql.Date;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Feb 08 13:25:50 IST 2023
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SgsCreateSettlementEOImpl extends EntityImpl {
    private static final ADFLogger LOG = ADFLogger.createADFLogger(SgsCostTargetCombinationEOImpl.class);
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        SettlementId,
        PaymentId,
        IcCustomerGeo,
        IcCustomerBu,
        IcSupplierGeo,
        IcSupplierBu,
        PaymentDate,
        ReceiptDate,
        DisbusementBankAccount,
        ReceiverBankAccount,
        PaymentMethod,
        TransactionReferenceNo,
        PaymentCurrency,
        TrxAmount,
        BankCharges,
        PurposeCode,
        CreatedDate,
        CreatedBy,
        UpdatedDate,
        UpdatedBy,
        Attribute1,
        Attribute2,
        Attribute3,
        Attribute4,
        Attribute5,
        Attribute6,
        Attribute7,
        Attribute8,
        Attribute9,
        Attribute10,
        Attribute11,
        Attribute12,
        Attribute13,
        Attribute14,
        Attribute15,
        DATE,
        NETAMOUNTPAYABLE,
        OUTSTANDINGAMOUNT,
        PAYMENTSTATUS,
        PSINVOICENUMBER,
        PSVOUCHERNUMBER,
        SETTLEMENTAMOUNT,
        SETTLEMENTSTATUS,
        TRANSACTIONCURRENCY,
        RECEIPTCURRENCY,
        RECEIPTPURPOSECODE;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int SETTLEMENTID = AttributesEnum.SettlementId.index();
    public static final int PAYMENTID = AttributesEnum.PaymentId.index();
    public static final int ICCUSTOMERGEO = AttributesEnum.IcCustomerGeo.index();
    public static final int ICCUSTOMERBU = AttributesEnum.IcCustomerBu.index();
    public static final int ICSUPPLIERGEO = AttributesEnum.IcSupplierGeo.index();
    public static final int ICSUPPLIERBU = AttributesEnum.IcSupplierBu.index();
    public static final int PAYMENTDATE = AttributesEnum.PaymentDate.index();
    public static final int RECEIPTDATE = AttributesEnum.ReceiptDate.index();
    public static final int DISBUSEMENTBANKACCOUNT = AttributesEnum.DisbusementBankAccount.index();
    public static final int RECEIVERBANKACCOUNT = AttributesEnum.ReceiverBankAccount.index();
    public static final int PAYMENTMETHOD = AttributesEnum.PaymentMethod.index();
    public static final int TRANSACTIONREFERENCENO = AttributesEnum.TransactionReferenceNo.index();
    public static final int PAYMENTCURRENCY = AttributesEnum.PaymentCurrency.index();
    public static final int TRXAMOUNT = AttributesEnum.TrxAmount.index();
    public static final int BANKCHARGES = AttributesEnum.BankCharges.index();
    public static final int PURPOSECODE = AttributesEnum.PurposeCode.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int UPDATEDDATE = AttributesEnum.UpdatedDate.index();
    public static final int UPDATEDBY = AttributesEnum.UpdatedBy.index();
    public static final int ATTRIBUTE1 = AttributesEnum.Attribute1.index();
    public static final int ATTRIBUTE2 = AttributesEnum.Attribute2.index();
    public static final int ATTRIBUTE3 = AttributesEnum.Attribute3.index();
    public static final int ATTRIBUTE4 = AttributesEnum.Attribute4.index();
    public static final int ATTRIBUTE5 = AttributesEnum.Attribute5.index();
    public static final int ATTRIBUTE6 = AttributesEnum.Attribute6.index();
    public static final int ATTRIBUTE7 = AttributesEnum.Attribute7.index();
    public static final int ATTRIBUTE8 = AttributesEnum.Attribute8.index();
    public static final int ATTRIBUTE9 = AttributesEnum.Attribute9.index();
    public static final int ATTRIBUTE10 = AttributesEnum.Attribute10.index();
    public static final int ATTRIBUTE11 = AttributesEnum.Attribute11.index();
    public static final int ATTRIBUTE12 = AttributesEnum.Attribute12.index();
    public static final int ATTRIBUTE13 = AttributesEnum.Attribute13.index();
    public static final int ATTRIBUTE14 = AttributesEnum.Attribute14.index();
    public static final int ATTRIBUTE15 = AttributesEnum.Attribute15.index();
    public static final int DATE = AttributesEnum.DATE.index();
    public static final int NETAMOUNTPAYABLE = AttributesEnum.NETAMOUNTPAYABLE.index();
    public static final int OUTSTANDINGAMOUNT = AttributesEnum.OUTSTANDINGAMOUNT.index();
    public static final int PAYMENTSTATUS = AttributesEnum.PAYMENTSTATUS.index();
    public static final int PSINVOICENUMBER = AttributesEnum.PSINVOICENUMBER.index();
    public static final int PSVOUCHERNUMBER = AttributesEnum.PSVOUCHERNUMBER.index();
    public static final int SETTLEMENTAMOUNT = AttributesEnum.SETTLEMENTAMOUNT.index();
    public static final int SETTLEMENTSTATUS = AttributesEnum.SETTLEMENTSTATUS.index();
    public static final int TRANSACTIONCURRENCY = AttributesEnum.TRANSACTIONCURRENCY.index();
    public static final int RECEIPTCURRENCY = AttributesEnum.RECEIPTCURRENCY.index();
    public static final int RECEIPTPURPOSECODE = AttributesEnum.RECEIPTPURPOSECODE.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SgsCreateSettlementEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("com.sgs.ics.model.bc.entity.SgsCreateSettlementEO");
    }


    /**
     * Gets the attribute value for SettlementId, using the alias name SettlementId.
     * @return the value of SettlementId
     */
    public Integer getSettlementId() {
        return (Integer) getAttributeInternal(SETTLEMENTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SettlementId.
     * @param value value to set the SettlementId
     */
    public void setSettlementId(Integer value) {
        setAttributeInternal(SETTLEMENTID, value);
    }

    /**
     * Gets the attribute value for PaymentId, using the alias name PaymentId.
     * @return the value of PaymentId
     */
    public String getPaymentId() {
        return (String) getAttributeInternal(PAYMENTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for PaymentId.
     * @param value value to set the PaymentId
     */
    public void setPaymentId(String value) {
        setAttributeInternal(PAYMENTID, value);
    }

    /**
     * Gets the attribute value for IcCustomerGeo, using the alias name IcCustomerGeo.
     * @return the value of IcCustomerGeo
     */
    public String getIcCustomerGeo() {
        return (String) getAttributeInternal(ICCUSTOMERGEO);
    }

    /**
     * Sets <code>value</code> as the attribute value for IcCustomerGeo.
     * @param value value to set the IcCustomerGeo
     */
    public void setIcCustomerGeo(String value) {
        setAttributeInternal(ICCUSTOMERGEO, value);
    }

    /**
     * Gets the attribute value for IcCustomerBu, using the alias name IcCustomerBu.
     * @return the value of IcCustomerBu
     */
    public String getIcCustomerBu() {
        return (String) getAttributeInternal(ICCUSTOMERBU);
    }

    /**
     * Sets <code>value</code> as the attribute value for IcCustomerBu.
     * @param value value to set the IcCustomerBu
     */
    public void setIcCustomerBu(String value) {
        setAttributeInternal(ICCUSTOMERBU, value);
    }

    /**
     * Gets the attribute value for IcSupplierGeo, using the alias name IcSupplierGeo.
     * @return the value of IcSupplierGeo
     */
    public String getIcSupplierGeo() {
        return (String) getAttributeInternal(ICSUPPLIERGEO);
    }

    /**
     * Sets <code>value</code> as the attribute value for IcSupplierGeo.
     * @param value value to set the IcSupplierGeo
     */
    public void setIcSupplierGeo(String value) {
        setAttributeInternal(ICSUPPLIERGEO, value);
    }

    /**
     * Gets the attribute value for IcSupplierBu, using the alias name IcSupplierBu.
     * @return the value of IcSupplierBu
     */
    public String getIcSupplierBu() {
        return (String) getAttributeInternal(ICSUPPLIERBU);
    }

    /**
     * Sets <code>value</code> as the attribute value for IcSupplierBu.
     * @param value value to set the IcSupplierBu
     */
    public void setIcSupplierBu(String value) {
        setAttributeInternal(ICSUPPLIERBU, value);
    }

    /**
     * Gets the attribute value for PaymentDate, using the alias name PaymentDate.
     * @return the value of PaymentDate
     */
    public Date getPaymentDate() {
        return (Date) getAttributeInternal(PAYMENTDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for PaymentDate.
     * @param value value to set the PaymentDate
     */
    public void setPaymentDate(Date value) {
        setAttributeInternal(PAYMENTDATE, value);
    }

    /**
     * Gets the attribute value for ReceiptDate, using the alias name ReceiptDate.
     * @return the value of ReceiptDate
     */
    public Date getReceiptDate() {
        return (Date) getAttributeInternal(RECEIPTDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReceiptDate.
     * @param value value to set the ReceiptDate
     */
    public void setReceiptDate(Date value) {
        setAttributeInternal(RECEIPTDATE, value);
    }

    /**
     * Gets the attribute value for DisbusementBankAccount, using the alias name DisbusementBankAccount.
     * @return the value of DisbusementBankAccount
     */
    public String getDisbusementBankAccount() {
        return (String) getAttributeInternal(DISBUSEMENTBANKACCOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for DisbusementBankAccount.
     * @param value value to set the DisbusementBankAccount
     */
    public void setDisbusementBankAccount(String value) {
        setAttributeInternal(DISBUSEMENTBANKACCOUNT, value);
    }

    /**
     * Gets the attribute value for ReceiverBankAccount, using the alias name ReceiverBankAccount.
     * @return the value of ReceiverBankAccount
     */
    public String getReceiverBankAccount() {
        return (String) getAttributeInternal(RECEIVERBANKACCOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReceiverBankAccount.
     * @param value value to set the ReceiverBankAccount
     */
    public void setReceiverBankAccount(String value) {
        setAttributeInternal(RECEIVERBANKACCOUNT, value);
    }

    /**
     * Gets the attribute value for PaymentMethod, using the alias name PaymentMethod.
     * @return the value of PaymentMethod
     */
    public String getPaymentMethod() {
        return (String) getAttributeInternal(PAYMENTMETHOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for PaymentMethod.
     * @param value value to set the PaymentMethod
     */
    public void setPaymentMethod(String value) {
        setAttributeInternal(PAYMENTMETHOD, value);
    }

    /**
     * Gets the attribute value for TransactionReferenceNo, using the alias name TransactionReferenceNo.
     * @return the value of TransactionReferenceNo
     */
    public String getTransactionReferenceNo() {
        return (String) getAttributeInternal(TRANSACTIONREFERENCENO);
    }

    /**
     * Sets <code>value</code> as the attribute value for TransactionReferenceNo.
     * @param value value to set the TransactionReferenceNo
     */
    public void setTransactionReferenceNo(String value) {
        setAttributeInternal(TRANSACTIONREFERENCENO, value);
    }

    /**
     * Gets the attribute value for PaymentCurrency, using the alias name PaymentCurrency.
     * @return the value of PaymentCurrency
     */
    public String getPaymentCurrency() {
        return (String) getAttributeInternal(PAYMENTCURRENCY);
    }

    /**
     * Sets <code>value</code> as the attribute value for PaymentCurrency.
     * @param value value to set the PaymentCurrency
     */
    public void setPaymentCurrency(String value) {
        setAttributeInternal(PAYMENTCURRENCY, value);
    }

    /**
     * Gets the attribute value for TrxAmount, using the alias name TrxAmount.
     * @return the value of TrxAmount
     */
    public BigDecimal getTrxAmount() {
        return (BigDecimal) getAttributeInternal(TRXAMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for TrxAmount.
     * @param value value to set the TrxAmount
     */
    public void setTrxAmount(BigDecimal value) {
        setAttributeInternal(TRXAMOUNT, value);
    }

    /**
     * Gets the attribute value for BankCharges, using the alias name BankCharges.
     * @return the value of BankCharges
     */
    public BigDecimal getBankCharges() {
        return (BigDecimal) getAttributeInternal(BANKCHARGES);
    }

    /**
     * Sets <code>value</code> as the attribute value for BankCharges.
     * @param value value to set the BankCharges
     */
    public void setBankCharges(BigDecimal value) {
        setAttributeInternal(BANKCHARGES, value);
    }

    /**
     * Gets the attribute value for PurposeCode, using the alias name PurposeCode.
     * @return the value of PurposeCode
     */
    public String getPurposeCode() {
        return (String) getAttributeInternal(PURPOSECODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for PurposeCode.
     * @param value value to set the PurposeCode
     */
    public void setPurposeCode(String value) {
        setAttributeInternal(PURPOSECODE, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the value of CreatedDate
     */
    public Date getCreatedDate() {
        return (Date) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedDate.
     * @param value value to set the CreatedDate
     */
    public void setCreatedDate(Date value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for UpdatedDate, using the alias name UpdatedDate.
     * @return the value of UpdatedDate
     */
    public Date getUpdatedDate() {
        return (Date) getAttributeInternal(UPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UpdatedDate.
     * @param value value to set the UpdatedDate
     */
    public void setUpdatedDate(Date value) {
        setAttributeInternal(UPDATEDDATE, value);
    }

    /**
     * Gets the attribute value for UpdatedBy, using the alias name UpdatedBy.
     * @return the value of UpdatedBy
     */
    public String getUpdatedBy() {
        return (String) getAttributeInternal(UPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for UpdatedBy.
     * @param value value to set the UpdatedBy
     */
    public void setUpdatedBy(String value) {
        setAttributeInternal(UPDATEDBY, value);
    }

    /**
     * Gets the attribute value for Attribute1, using the alias name Attribute1.
     * @return the value of Attribute1
     */
    public String getAttribute1() {
        return (String) getAttributeInternal(ATTRIBUTE1);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute1.
     * @param value value to set the Attribute1
     */
    public void setAttribute1(String value) {
        setAttributeInternal(ATTRIBUTE1, value);
    }

    /**
     * Gets the attribute value for Attribute2, using the alias name Attribute2.
     * @return the value of Attribute2
     */
    public String getAttribute2() {
        return (String) getAttributeInternal(ATTRIBUTE2);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute2.
     * @param value value to set the Attribute2
     */
    public void setAttribute2(String value) {
        setAttributeInternal(ATTRIBUTE2, value);
    }

    /**
     * Gets the attribute value for Attribute3, using the alias name Attribute3.
     * @return the value of Attribute3
     */
    public String getAttribute3() {
        return (String) getAttributeInternal(ATTRIBUTE3);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute3.
     * @param value value to set the Attribute3
     */
    public void setAttribute3(String value) {
        setAttributeInternal(ATTRIBUTE3, value);
    }

    /**
     * Gets the attribute value for Attribute4, using the alias name Attribute4.
     * @return the value of Attribute4
     */
    public String getAttribute4() {
        return (String) getAttributeInternal(ATTRIBUTE4);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute4.
     * @param value value to set the Attribute4
     */
    public void setAttribute4(String value) {
        setAttributeInternal(ATTRIBUTE4, value);
    }

    /**
     * Gets the attribute value for Attribute5, using the alias name Attribute5.
     * @return the value of Attribute5
     */
    public String getAttribute5() {
        return (String) getAttributeInternal(ATTRIBUTE5);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute5.
     * @param value value to set the Attribute5
     */
    public void setAttribute5(String value) {
        setAttributeInternal(ATTRIBUTE5, value);
    }

    /**
     * Gets the attribute value for Attribute6, using the alias name Attribute6.
     * @return the value of Attribute6
     */
    public Date getAttribute6() {
        return (Date) getAttributeInternal(ATTRIBUTE6);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute6.
     * @param value value to set the Attribute6
     */
    public void setAttribute6(Date value) {
        setAttributeInternal(ATTRIBUTE6, value);
    }

    /**
     * Gets the attribute value for Attribute7, using the alias name Attribute7.
     * @return the value of Attribute7
     */
    public Date getAttribute7() {
        return (Date) getAttributeInternal(ATTRIBUTE7);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute7.
     * @param value value to set the Attribute7
     */
    public void setAttribute7(Date value) {
        setAttributeInternal(ATTRIBUTE7, value);
    }

    /**
     * Gets the attribute value for Attribute8, using the alias name Attribute8.
     * @return the value of Attribute8
     */
    public Date getAttribute8() {
        return (Date) getAttributeInternal(ATTRIBUTE8);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute8.
     * @param value value to set the Attribute8
     */
    public void setAttribute8(Date value) {
        setAttributeInternal(ATTRIBUTE8, value);
    }

    /**
     * Gets the attribute value for Attribute9, using the alias name Attribute9.
     * @return the value of Attribute9
     */
    public Date getAttribute9() {
        return (Date) getAttributeInternal(ATTRIBUTE9);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute9.
     * @param value value to set the Attribute9
     */
    public void setAttribute9(Date value) {
        setAttributeInternal(ATTRIBUTE9, value);
    }

    /**
     * Gets the attribute value for Attribute10, using the alias name Attribute10.
     * @return the value of Attribute10
     */
    public Date getAttribute10() {
        return (Date) getAttributeInternal(ATTRIBUTE10);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute10.
     * @param value value to set the Attribute10
     */
    public void setAttribute10(Date value) {
        setAttributeInternal(ATTRIBUTE10, value);
    }

    /**
     * Gets the attribute value for Attribute11, using the alias name Attribute11.
     * @return the value of Attribute11
     */
    public BigDecimal getAttribute11() {
        return (BigDecimal) getAttributeInternal(ATTRIBUTE11);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute11.
     * @param value value to set the Attribute11
     */
    public void setAttribute11(BigDecimal value) {
        setAttributeInternal(ATTRIBUTE11, value);
    }

    /**
     * Gets the attribute value for Attribute12, using the alias name Attribute12.
     * @return the value of Attribute12
     */
    public BigDecimal getAttribute12() {
        return (BigDecimal) getAttributeInternal(ATTRIBUTE12);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute12.
     * @param value value to set the Attribute12
     */
    public void setAttribute12(BigDecimal value) {
        setAttributeInternal(ATTRIBUTE12, value);
    }

    /**
     * Gets the attribute value for Attribute13, using the alias name Attribute13.
     * @return the value of Attribute13
     */
    public BigDecimal getAttribute13() {
        return (BigDecimal) getAttributeInternal(ATTRIBUTE13);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute13.
     * @param value value to set the Attribute13
     */
    public void setAttribute13(BigDecimal value) {
        setAttributeInternal(ATTRIBUTE13, value);
    }

    /**
     * Gets the attribute value for Attribute14, using the alias name Attribute14.
     * @return the value of Attribute14
     */
    public BigDecimal getAttribute14() {
        return (BigDecimal) getAttributeInternal(ATTRIBUTE14);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute14.
     * @param value value to set the Attribute14
     */
    public void setAttribute14(BigDecimal value) {
        setAttributeInternal(ATTRIBUTE14, value);
    }

    /**
     * Gets the attribute value for Attribute15, using the alias name Attribute15.
     * @return the value of Attribute15
     */
    public BigDecimal getAttribute15() {
        return (BigDecimal) getAttributeInternal(ATTRIBUTE15);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute15.
     * @param value value to set the Attribute15
     */
    public void setAttribute15(BigDecimal value) {
        setAttributeInternal(ATTRIBUTE15, value);
    }

    /**
     * Gets the attribute value for DATE, using the alias name DATE.
     * @return the value of DATE
     */
    public Date getDATE() {
        return (Date) getAttributeInternal(DATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for DATE.
     * @param value value to set the DATE
     */
    public void setDATE(Date value) {
        setAttributeInternal(DATE, value);
    }

    /**
     * Gets the attribute value for NETAMOUNTPAYABLE, using the alias name NETAMOUNTPAYABLE.
     * @return the value of NETAMOUNTPAYABLE
     */
    public BigDecimal getNETAMOUNTPAYABLE() {
        return (BigDecimal) getAttributeInternal(NETAMOUNTPAYABLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for NETAMOUNTPAYABLE.
     * @param value value to set the NETAMOUNTPAYABLE
     */
    public void setNETAMOUNTPAYABLE(BigDecimal value) {
        setAttributeInternal(NETAMOUNTPAYABLE, value);
    }

    /**
     * Gets the attribute value for OUTSTANDINGAMOUNT, using the alias name OUTSTANDINGAMOUNT.
     * @return the value of OUTSTANDINGAMOUNT
     */
    public BigDecimal getOUTSTANDINGAMOUNT() {
        return (BigDecimal) getAttributeInternal(OUTSTANDINGAMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for OUTSTANDINGAMOUNT.
     * @param value value to set the OUTSTANDINGAMOUNT
     */
    public void setOUTSTANDINGAMOUNT(BigDecimal value) {
        setAttributeInternal(OUTSTANDINGAMOUNT, value);
    }

    /**
     * Gets the attribute value for PAYMENTSTATUS, using the alias name PAYMENTSTATUS.
     * @return the value of PAYMENTSTATUS
     */
    public String getPAYMENTSTATUS() {
        return (String) getAttributeInternal(PAYMENTSTATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for PAYMENTSTATUS.
     * @param value value to set the PAYMENTSTATUS
     */
    public void setPAYMENTSTATUS(String value) {
        setAttributeInternal(PAYMENTSTATUS, value);
    }

    /**
     * Gets the attribute value for PSINVOICENUMBER, using the alias name PSINVOICENUMBER.
     * @return the value of PSINVOICENUMBER
     */
    public String getPSINVOICENUMBER() {
        return (String) getAttributeInternal(PSINVOICENUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for PSINVOICENUMBER.
     * @param value value to set the PSINVOICENUMBER
     */
    public void setPSINVOICENUMBER(String value) {
        setAttributeInternal(PSINVOICENUMBER, value);
    }

    /**
     * Gets the attribute value for PSVOUCHERNUMBER, using the alias name PSVOUCHERNUMBER.
     * @return the value of PSVOUCHERNUMBER
     */
    public String getPSVOUCHERNUMBER() {
        return (String) getAttributeInternal(PSVOUCHERNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for PSVOUCHERNUMBER.
     * @param value value to set the PSVOUCHERNUMBER
     */
    public void setPSVOUCHERNUMBER(String value) {
        setAttributeInternal(PSVOUCHERNUMBER, value);
    }

    /**
     * Gets the attribute value for SETTLEMENTAMOUNT, using the alias name SETTLEMENTAMOUNT.
     * @return the value of SETTLEMENTAMOUNT
     */
    public BigDecimal getSETTLEMENTAMOUNT() {
        return (BigDecimal) getAttributeInternal(SETTLEMENTAMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for SETTLEMENTAMOUNT.
     * @param value value to set the SETTLEMENTAMOUNT
     */
    public void setSETTLEMENTAMOUNT(BigDecimal value) {
        setAttributeInternal(SETTLEMENTAMOUNT, value);
    }

    /**
     * Gets the attribute value for SETTLEMENTSTATUS, using the alias name SETTLEMENTSTATUS.
     * @return the value of SETTLEMENTSTATUS
     */
    public String getSETTLEMENTSTATUS() {
        return (String) getAttributeInternal(SETTLEMENTSTATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for SETTLEMENTSTATUS.
     * @param value value to set the SETTLEMENTSTATUS
     */
    public void setSETTLEMENTSTATUS(String value) {
        setAttributeInternal(SETTLEMENTSTATUS, value);
    }

    /**
     * Gets the attribute value for TRANSACTIONCURRENCY, using the alias name TRANSACTIONCURRENCY.
     * @return the value of TRANSACTIONCURRENCY
     */
    public String getTRANSACTIONCURRENCY() {
        return (String) getAttributeInternal(TRANSACTIONCURRENCY);
    }

    /**
     * Sets <code>value</code> as the attribute value for TRANSACTIONCURRENCY.
     * @param value value to set the TRANSACTIONCURRENCY
     */
    public void setTRANSACTIONCURRENCY(String value) {
        setAttributeInternal(TRANSACTIONCURRENCY, value);
    }


    /**
     * Gets the attribute value for RECEIPTCURRENCY, using the alias name RECEIPTCURRENCY.
     * @return the value of RECEIPTCURRENCY
     */
    public String getRECEIPTCURRENCY() {
        return (String) getAttributeInternal(RECEIPTCURRENCY);
    }

    /**
     * Sets <code>value</code> as the attribute value for RECEIPTCURRENCY.
     * @param value value to set the RECEIPTCURRENCY
     */
    public void setRECEIPTCURRENCY(String value) {
        setAttributeInternal(RECEIPTCURRENCY, value);
    }

    /**
     * Gets the attribute value for RECEIPTPURPOSECODE, using the alias name RECEIPTPURPOSECODE.
     * @return the value of RECEIPTPURPOSECODE
     */
    public String getRECEIPTPURPOSECODE() {
        return (String) getAttributeInternal(RECEIPTPURPOSECODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for RECEIPTPURPOSECODE.
     * @param value value to set the RECEIPTPURPOSECODE
     */
    public void setRECEIPTPURPOSECODE(String value) {
        setAttributeInternal(RECEIPTPURPOSECODE, value);
    }

    /**
     * @param settlementId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer settlementId) {
        return new Key(new Object[] { settlementId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        try {
            SGSAppModuleImpl am = new SGSAppModuleImpl();
            setSettlementId(am.getDBSequence1("SEQ_SGS_CREATE_SETTLEMENT"));
            CommonUtils util = new CommonUtils();
            Object user = (Object) util.getSessionScopeValue("_username").toString();
            setCreatedBy(user.toString());
        } catch (Exception e) {
            LOG.severe(e);
        }
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if (operation == DML_UPDATE) {
            CommonUtils util = new CommonUtils();
            Object user = (Object) util.getSessionScopeValue("_username").toString();
            setUpdatedBy(user.toString());
        }
        super.doDML(operation, e);
    }
}

