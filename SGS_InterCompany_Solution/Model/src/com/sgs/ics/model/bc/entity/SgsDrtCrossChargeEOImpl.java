package com.sgs.ics.model.bc.entity;

import com.sgs.ics.model.bc.am.SGSAppModuleImpl;
import com.sgs.ics.model.bc.commonutils.CommonUtils;

import java.math.BigDecimal;

import java.sql.Date;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Mar 01 19:56:26 IST 2023
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SgsDrtCrossChargeEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        DrtcrossChargeId,
        NatureOfExpense,
        AllocationBasis,
        FromBu,
        FromOu,
        FromJobCode,
        FromDeptId,
        SourceCurrency,
        ToBu,
        ToOu,
        ToJobCode,
        ToDeptId,
        OffsetGlAccountCr,
        AllocatedAmount,
        AccountingTreatment,
        CREATEDBY,
        CREATEDDATE,
        TARGETGLACCOUNTDR,
        UPDATEDBY,
        UPDATEDDATE,
        ALLOCATIONSTATUS;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int DRTCROSSCHARGEID = AttributesEnum.DrtcrossChargeId.index();
    public static final int NATUREOFEXPENSE = AttributesEnum.NatureOfExpense.index();
    public static final int ALLOCATIONBASIS = AttributesEnum.AllocationBasis.index();
    public static final int FROMBU = AttributesEnum.FromBu.index();
    public static final int FROMOU = AttributesEnum.FromOu.index();
    public static final int FROMJOBCODE = AttributesEnum.FromJobCode.index();
    public static final int FROMDEPTID = AttributesEnum.FromDeptId.index();
    public static final int SOURCECURRENCY = AttributesEnum.SourceCurrency.index();
    public static final int TOBU = AttributesEnum.ToBu.index();
    public static final int TOOU = AttributesEnum.ToOu.index();
    public static final int TOJOBCODE = AttributesEnum.ToJobCode.index();
    public static final int TODEPTID = AttributesEnum.ToDeptId.index();
    public static final int OFFSETGLACCOUNTCR = AttributesEnum.OffsetGlAccountCr.index();
    public static final int ALLOCATEDAMOUNT = AttributesEnum.AllocatedAmount.index();
    public static final int ACCOUNTINGTREATMENT = AttributesEnum.AccountingTreatment.index();
    public static final int CREATEDBY = AttributesEnum.CREATEDBY.index();
    public static final int CREATEDDATE = AttributesEnum.CREATEDDATE.index();
    public static final int TARGETGLACCOUNTDR = AttributesEnum.TARGETGLACCOUNTDR.index();
    public static final int UPDATEDBY = AttributesEnum.UPDATEDBY.index();
    public static final int UPDATEDDATE = AttributesEnum.UPDATEDDATE.index();
    public static final int ALLOCATIONSTATUS = AttributesEnum.ALLOCATIONSTATUS.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SgsDrtCrossChargeEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("com.sgs.ics.model.bc.entity.SgsDrtCrossChargeEO");
    }


    /**
     * Gets the attribute value for DrtcrossChargeId, using the alias name DrtcrossChargeId.
     * @return the value of DrtcrossChargeId
     */
    public Integer getDrtcrossChargeId() {
        return (Integer) getAttributeInternal(DRTCROSSCHARGEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DrtcrossChargeId.
     * @param value value to set the DrtcrossChargeId
     */
    public void setDrtcrossChargeId(Integer value) {
        setAttributeInternal(DRTCROSSCHARGEID, value);
    }

    /**
     * Gets the attribute value for NatureOfExpense, using the alias name NatureOfExpense.
     * @return the value of NatureOfExpense
     */
    public String getNatureOfExpense() {
        return (String) getAttributeInternal(NATUREOFEXPENSE);
    }

    /**
     * Sets <code>value</code> as the attribute value for NatureOfExpense.
     * @param value value to set the NatureOfExpense
     */
    public void setNatureOfExpense(String value) {
        setAttributeInternal(NATUREOFEXPENSE, value);
    }

    /**
     * Gets the attribute value for AllocationBasis, using the alias name AllocationBasis.
     * @return the value of AllocationBasis
     */
    public String getAllocationBasis() {
        return (String) getAttributeInternal(ALLOCATIONBASIS);
    }

    /**
     * Sets <code>value</code> as the attribute value for AllocationBasis.
     * @param value value to set the AllocationBasis
     */
    public void setAllocationBasis(String value) {
        setAttributeInternal(ALLOCATIONBASIS, value);
    }

    /**
     * Gets the attribute value for FromBu, using the alias name FromBu.
     * @return the value of FromBu
     */
    public String getFromBu() {
        return (String) getAttributeInternal(FROMBU);
    }

    /**
     * Sets <code>value</code> as the attribute value for FromBu.
     * @param value value to set the FromBu
     */
    public void setFromBu(String value) {
        setAttributeInternal(FROMBU, value);
    }

    /**
     * Gets the attribute value for FromOu, using the alias name FromOu.
     * @return the value of FromOu
     */
    public String getFromOu() {
        return (String) getAttributeInternal(FROMOU);
    }

    /**
     * Sets <code>value</code> as the attribute value for FromOu.
     * @param value value to set the FromOu
     */
    public void setFromOu(String value) {
        setAttributeInternal(FROMOU, value);
    }

    /**
     * Gets the attribute value for FromJobCode, using the alias name FromJobCode.
     * @return the value of FromJobCode
     */
    public String getFromJobCode() {
        return (String) getAttributeInternal(FROMJOBCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for FromJobCode.
     * @param value value to set the FromJobCode
     */
    public void setFromJobCode(String value) {
        setAttributeInternal(FROMJOBCODE, value);
    }

    /**
     * Gets the attribute value for FromDeptId, using the alias name FromDeptId.
     * @return the value of FromDeptId
     */
    public String getFromDeptId() {
        return (String) getAttributeInternal(FROMDEPTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for FromDeptId.
     * @param value value to set the FromDeptId
     */
    public void setFromDeptId(String value) {
        setAttributeInternal(FROMDEPTID, value);
    }

    /**
     * Gets the attribute value for SourceCurrency, using the alias name SourceCurrency.
     * @return the value of SourceCurrency
     */
    public BigDecimal getSourceCurrency() {
        return (BigDecimal) getAttributeInternal(SOURCECURRENCY);
    }

    /**
     * Sets <code>value</code> as the attribute value for SourceCurrency.
     * @param value value to set the SourceCurrency
     */
    public void setSourceCurrency(BigDecimal value) {
        setAttributeInternal(SOURCECURRENCY, value);
    }

    /**
     * Gets the attribute value for ToBu, using the alias name ToBu.
     * @return the value of ToBu
     */
    public String getToBu() {
        return (String) getAttributeInternal(TOBU);
    }

    /**
     * Sets <code>value</code> as the attribute value for ToBu.
     * @param value value to set the ToBu
     */
    public void setToBu(String value) {
        setAttributeInternal(TOBU, value);
    }

    /**
     * Gets the attribute value for ToOu, using the alias name ToOu.
     * @return the value of ToOu
     */
    public String getToOu() {
        return (String) getAttributeInternal(TOOU);
    }

    /**
     * Sets <code>value</code> as the attribute value for ToOu.
     * @param value value to set the ToOu
     */
    public void setToOu(String value) {
        setAttributeInternal(TOOU, value);
    }

    /**
     * Gets the attribute value for ToJobCode, using the alias name ToJobCode.
     * @return the value of ToJobCode
     */
    public String getToJobCode() {
        return (String) getAttributeInternal(TOJOBCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ToJobCode.
     * @param value value to set the ToJobCode
     */
    public void setToJobCode(String value) {
        setAttributeInternal(TOJOBCODE, value);
    }

    /**
     * Gets the attribute value for ToDeptId, using the alias name ToDeptId.
     * @return the value of ToDeptId
     */
    public String getToDeptId() {
        return (String) getAttributeInternal(TODEPTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ToDeptId.
     * @param value value to set the ToDeptId
     */
    public void setToDeptId(String value) {
        setAttributeInternal(TODEPTID, value);
    }

    /**
     * Gets the attribute value for OffsetGlAccountCr, using the alias name OffsetGlAccountCr.
     * @return the value of OffsetGlAccountCr
     */
    public String getOffsetGlAccountCr() {
        return (String) getAttributeInternal(OFFSETGLACCOUNTCR);
    }

    /**
     * Sets <code>value</code> as the attribute value for OffsetGlAccountCr.
     * @param value value to set the OffsetGlAccountCr
     */
    public void setOffsetGlAccountCr(String value) {
        setAttributeInternal(OFFSETGLACCOUNTCR, value);
    }

    /**
     * Gets the attribute value for AllocatedAmount, using the alias name AllocatedAmount.
     * @return the value of AllocatedAmount
     */
    public BigDecimal getAllocatedAmount() {
        return (BigDecimal) getAttributeInternal(ALLOCATEDAMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for AllocatedAmount.
     * @param value value to set the AllocatedAmount
     */
    public void setAllocatedAmount(BigDecimal value) {
        setAttributeInternal(ALLOCATEDAMOUNT, value);
    }

    /**
     * Gets the attribute value for AccountingTreatment, using the alias name AccountingTreatment.
     * @return the value of AccountingTreatment
     */
    public String getAccountingTreatment() {
        return (String) getAttributeInternal(ACCOUNTINGTREATMENT);
    }

    /**
     * Sets <code>value</code> as the attribute value for AccountingTreatment.
     * @param value value to set the AccountingTreatment
     */
    public void setAccountingTreatment(String value) {
        setAttributeInternal(ACCOUNTINGTREATMENT, value);
    }

    /**
     * Gets the attribute value for CREATEDBY, using the alias name CREATEDBY.
     * @return the value of CREATEDBY
     */
    public String getCREATEDBY() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CREATEDBY.
     * @param value value to set the CREATEDBY
     */
    public void setCREATEDBY(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CREATEDDATE, using the alias name CREATEDDATE.
     * @return the value of CREATEDDATE
     */
    public Date getCREATEDDATE() {
        return (Date) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CREATEDDATE.
     * @param value value to set the CREATEDDATE
     */
    public void setCREATEDDATE(Date value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for TARGETGLACCOUNTDR, using the alias name TARGETGLACCOUNTDR.
     * @return the value of TARGETGLACCOUNTDR
     */
    public String getTARGETGLACCOUNTDR() {
        return (String) getAttributeInternal(TARGETGLACCOUNTDR);
    }

    /**
     * Sets <code>value</code> as the attribute value for TARGETGLACCOUNTDR.
     * @param value value to set the TARGETGLACCOUNTDR
     */
    public void setTARGETGLACCOUNTDR(String value) {
        setAttributeInternal(TARGETGLACCOUNTDR, value);
    }

    /**
     * Gets the attribute value for UPDATEDBY, using the alias name UPDATEDBY.
     * @return the value of UPDATEDBY
     */
    public String getUPDATEDBY() {
        return (String) getAttributeInternal(UPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for UPDATEDBY.
     * @param value value to set the UPDATEDBY
     */
    public void setUPDATEDBY(String value) {
        setAttributeInternal(UPDATEDBY, value);
    }

    /**
     * Gets the attribute value for UPDATEDDATE, using the alias name UPDATEDDATE.
     * @return the value of UPDATEDDATE
     */
    public Date getUPDATEDDATE() {
        return (Date) getAttributeInternal(UPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UPDATEDDATE.
     * @param value value to set the UPDATEDDATE
     */
    public void setUPDATEDDATE(Date value) {
        setAttributeInternal(UPDATEDDATE, value);
    }


    /**
     * Gets the attribute value for ALLOCATIONSTATUS, using the alias name ALLOCATIONSTATUS.
     * @return the value of ALLOCATIONSTATUS
     */
    public String getALLOCATIONSTATUS() {
        return (String) getAttributeInternal(ALLOCATIONSTATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for ALLOCATIONSTATUS.
     * @param value value to set the ALLOCATIONSTATUS
     */
    public void setALLOCATIONSTATUS(String value) {
        setAttributeInternal(ALLOCATIONSTATUS, value);
    }

    /**
     * @param drtcrossChargeId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer drtcrossChargeId) {
        return new Key(new Object[] { drtcrossChargeId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        try {
            SGSAppModuleImpl am = new SGSAppModuleImpl();
            setDrtcrossChargeId(am.getDBSequence1("SEQ_SGS_DRTCROSS_CHARGE_TBL"));
            CommonUtils util = new CommonUtils();
            Object user = (Object) util.getSessionScopeValue("_username").toString();
            setCREATEDBY(user.toString());
            setCREATEDDATE(new java.sql.Date(new java.util.Date().getTime()));
        } catch (Exception e) {
            // TODO: Add catch code
            e.printStackTrace();
        }
    }
}

