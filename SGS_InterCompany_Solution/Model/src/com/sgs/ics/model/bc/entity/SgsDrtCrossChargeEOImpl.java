package com.sgs.ics.model.bc.entity;

import com.sgs.ics.model.bc.am.SGSAppModuleImpl;
import com.sgs.ics.model.bc.commonutils.CommonUtils;

import java.math.BigDecimal;

import java.sql.Date;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Mar 09 16:13:13 IST 2023
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SgsDrtCrossChargeEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        DrtcrossChargeId,
        NatureOfExpense,
        AllocationBasis,
        FromBu,
        FromOu,
        FromJobCode,
        FromDeptId,
        SourceCurrency,
        ToBu,
        ToOu,
        ToJobCode,
        ToDeptId,
        OffsetGlAccountCr,
        AllocatedAmount,
        AccountingTreatment,
        CreatedDate,
        CreatedBy,
        UpdatedDate,
        UpdatedBy,
        Attribute1,
        Attribute2,
        Attribute3,
        Attribute4,
        Attribute5,
        Attribute6,
        Attribute7,
        Attribute8,
        Attribute9,
        Attribute10,
        Attribute11,
        Attribute12,
        Attribute13,
        Attribute14,
        Attribute15,
        TargetGlAccountDr,
        AllocationStatus;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    private static final ADFLogger LOG = ADFLogger.createADFLogger(SgsDrtCrossChargeEOImpl.class);
    
    public static final int DRTCROSSCHARGEID = AttributesEnum.DrtcrossChargeId.index();
    public static final int NATUREOFEXPENSE = AttributesEnum.NatureOfExpense.index();
    public static final int ALLOCATIONBASIS = AttributesEnum.AllocationBasis.index();
    public static final int FROMBU = AttributesEnum.FromBu.index();
    public static final int FROMOU = AttributesEnum.FromOu.index();
    public static final int FROMJOBCODE = AttributesEnum.FromJobCode.index();
    public static final int FROMDEPTID = AttributesEnum.FromDeptId.index();
    public static final int SOURCECURRENCY = AttributesEnum.SourceCurrency.index();
    public static final int TOBU = AttributesEnum.ToBu.index();
    public static final int TOOU = AttributesEnum.ToOu.index();
    public static final int TOJOBCODE = AttributesEnum.ToJobCode.index();
    public static final int TODEPTID = AttributesEnum.ToDeptId.index();
    public static final int OFFSETGLACCOUNTCR = AttributesEnum.OffsetGlAccountCr.index();
    public static final int ALLOCATEDAMOUNT = AttributesEnum.AllocatedAmount.index();
    public static final int ACCOUNTINGTREATMENT = AttributesEnum.AccountingTreatment.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int UPDATEDDATE = AttributesEnum.UpdatedDate.index();
    public static final int UPDATEDBY = AttributesEnum.UpdatedBy.index();
    public static final int ATTRIBUTE1 = AttributesEnum.Attribute1.index();
    public static final int ATTRIBUTE2 = AttributesEnum.Attribute2.index();
    public static final int ATTRIBUTE3 = AttributesEnum.Attribute3.index();
    public static final int ATTRIBUTE4 = AttributesEnum.Attribute4.index();
    public static final int ATTRIBUTE5 = AttributesEnum.Attribute5.index();
    public static final int ATTRIBUTE6 = AttributesEnum.Attribute6.index();
    public static final int ATTRIBUTE7 = AttributesEnum.Attribute7.index();
    public static final int ATTRIBUTE8 = AttributesEnum.Attribute8.index();
    public static final int ATTRIBUTE9 = AttributesEnum.Attribute9.index();
    public static final int ATTRIBUTE10 = AttributesEnum.Attribute10.index();
    public static final int ATTRIBUTE11 = AttributesEnum.Attribute11.index();
    public static final int ATTRIBUTE12 = AttributesEnum.Attribute12.index();
    public static final int ATTRIBUTE13 = AttributesEnum.Attribute13.index();
    public static final int ATTRIBUTE14 = AttributesEnum.Attribute14.index();
    public static final int ATTRIBUTE15 = AttributesEnum.Attribute15.index();
    public static final int TARGETGLACCOUNTDR = AttributesEnum.TargetGlAccountDr.index();
    public static final int ALLOCATIONSTATUS = AttributesEnum.AllocationStatus.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SgsDrtCrossChargeEOImpl() {
    }

    /**
     * Gets the attribute value for DrtcrossChargeId, using the alias name DrtcrossChargeId.
     * @return the value of DrtcrossChargeId
     */
    public Integer getDrtcrossChargeId() {
        return (Integer) getAttributeInternal(DRTCROSSCHARGEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DrtcrossChargeId.
     * @param value value to set the DrtcrossChargeId
     */
    public void setDrtcrossChargeId(Integer value) {
        setAttributeInternal(DRTCROSSCHARGEID, value);
    }

    /**
     * Gets the attribute value for NatureOfExpense, using the alias name NatureOfExpense.
     * @return the value of NatureOfExpense
     */
    public String getNatureOfExpense() {
        return (String) getAttributeInternal(NATUREOFEXPENSE);
    }

    /**
     * Sets <code>value</code> as the attribute value for NatureOfExpense.
     * @param value value to set the NatureOfExpense
     */
    public void setNatureOfExpense(String value) {
        setAttributeInternal(NATUREOFEXPENSE, value);
    }

    /**
     * Gets the attribute value for AllocationBasis, using the alias name AllocationBasis.
     * @return the value of AllocationBasis
     */
    public String getAllocationBasis() {
        return (String) getAttributeInternal(ALLOCATIONBASIS);
    }

    /**
     * Sets <code>value</code> as the attribute value for AllocationBasis.
     * @param value value to set the AllocationBasis
     */
    public void setAllocationBasis(String value) {
        setAttributeInternal(ALLOCATIONBASIS, value);
    }

    /**
     * Gets the attribute value for FromBu, using the alias name FromBu.
     * @return the value of FromBu
     */
    public String getFromBu() {
        return (String) getAttributeInternal(FROMBU);
    }

    /**
     * Sets <code>value</code> as the attribute value for FromBu.
     * @param value value to set the FromBu
     */
    public void setFromBu(String value) {
        setAttributeInternal(FROMBU, value);
    }

    /**
     * Gets the attribute value for FromOu, using the alias name FromOu.
     * @return the value of FromOu
     */
    public String getFromOu() {
        return (String) getAttributeInternal(FROMOU);
    }

    /**
     * Sets <code>value</code> as the attribute value for FromOu.
     * @param value value to set the FromOu
     */
    public void setFromOu(String value) {
        setAttributeInternal(FROMOU, value);
    }

    /**
     * Gets the attribute value for FromJobCode, using the alias name FromJobCode.
     * @return the value of FromJobCode
     */
    public String getFromJobCode() {
        return (String) getAttributeInternal(FROMJOBCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for FromJobCode.
     * @param value value to set the FromJobCode
     */
    public void setFromJobCode(String value) {
        setAttributeInternal(FROMJOBCODE, value);
    }

    /**
     * Gets the attribute value for FromDeptId, using the alias name FromDeptId.
     * @return the value of FromDeptId
     */
    public String getFromDeptId() {
        return (String) getAttributeInternal(FROMDEPTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for FromDeptId.
     * @param value value to set the FromDeptId
     */
    public void setFromDeptId(String value) {
        setAttributeInternal(FROMDEPTID, value);
    }

    /**
     * Gets the attribute value for SourceCurrency, using the alias name SourceCurrency.
     * @return the value of SourceCurrency
     */
    public BigDecimal getSourceCurrency() {
        return (BigDecimal) getAttributeInternal(SOURCECURRENCY);
    }

    /**
     * Sets <code>value</code> as the attribute value for SourceCurrency.
     * @param value value to set the SourceCurrency
     */
    public void setSourceCurrency(BigDecimal value) {
        setAttributeInternal(SOURCECURRENCY, value);
    }

    /**
     * Gets the attribute value for ToBu, using the alias name ToBu.
     * @return the value of ToBu
     */
    public String getToBu() {
        return (String) getAttributeInternal(TOBU);
    }

    /**
     * Sets <code>value</code> as the attribute value for ToBu.
     * @param value value to set the ToBu
     */
    public void setToBu(String value) {
        setAttributeInternal(TOBU, value);
    }

    /**
     * Gets the attribute value for ToOu, using the alias name ToOu.
     * @return the value of ToOu
     */
    public String getToOu() {
        return (String) getAttributeInternal(TOOU);
    }

    /**
     * Sets <code>value</code> as the attribute value for ToOu.
     * @param value value to set the ToOu
     */
    public void setToOu(String value) {
        setAttributeInternal(TOOU, value);
    }

    /**
     * Gets the attribute value for ToJobCode, using the alias name ToJobCode.
     * @return the value of ToJobCode
     */
    public String getToJobCode() {
        return (String) getAttributeInternal(TOJOBCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ToJobCode.
     * @param value value to set the ToJobCode
     */
    public void setToJobCode(String value) {
        setAttributeInternal(TOJOBCODE, value);
    }

    /**
     * Gets the attribute value for ToDeptId, using the alias name ToDeptId.
     * @return the value of ToDeptId
     */
    public String getToDeptId() {
        return (String) getAttributeInternal(TODEPTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ToDeptId.
     * @param value value to set the ToDeptId
     */
    public void setToDeptId(String value) {
        setAttributeInternal(TODEPTID, value);
    }

    /**
     * Gets the attribute value for OffsetGlAccountCr, using the alias name OffsetGlAccountCr.
     * @return the value of OffsetGlAccountCr
     */
    public String getOffsetGlAccountCr() {
        return (String) getAttributeInternal(OFFSETGLACCOUNTCR);
    }

    /**
     * Sets <code>value</code> as the attribute value for OffsetGlAccountCr.
     * @param value value to set the OffsetGlAccountCr
     */
    public void setOffsetGlAccountCr(String value) {
        setAttributeInternal(OFFSETGLACCOUNTCR, value);
    }

    /**
     * Gets the attribute value for AllocatedAmount, using the alias name AllocatedAmount.
     * @return the value of AllocatedAmount
     */
    public BigDecimal getAllocatedAmount() {
        return (BigDecimal) getAttributeInternal(ALLOCATEDAMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for AllocatedAmount.
     * @param value value to set the AllocatedAmount
     */
    public void setAllocatedAmount(BigDecimal value) {
        setAttributeInternal(ALLOCATEDAMOUNT, value);
    }

    /**
     * Gets the attribute value for AccountingTreatment, using the alias name AccountingTreatment.
     * @return the value of AccountingTreatment
     */
    public String getAccountingTreatment() {
        return (String) getAttributeInternal(ACCOUNTINGTREATMENT);
    }

    /**
     * Sets <code>value</code> as the attribute value for AccountingTreatment.
     * @param value value to set the AccountingTreatment
     */
    public void setAccountingTreatment(String value) {
        setAttributeInternal(ACCOUNTINGTREATMENT, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the value of CreatedDate
     */
    public Date getCreatedDate() {
        return (Date) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedDate.
     * @param value value to set the CreatedDate
     */
    public void setCreatedDate(Date value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for UpdatedDate, using the alias name UpdatedDate.
     * @return the value of UpdatedDate
     */
    public Date getUpdatedDate() {
        return (Date) getAttributeInternal(UPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UpdatedDate.
     * @param value value to set the UpdatedDate
     */
    public void setUpdatedDate(Date value) {
        setAttributeInternal(UPDATEDDATE, value);
    }

    /**
     * Gets the attribute value for UpdatedBy, using the alias name UpdatedBy.
     * @return the value of UpdatedBy
     */
    public String getUpdatedBy() {
        return (String) getAttributeInternal(UPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for UpdatedBy.
     * @param value value to set the UpdatedBy
     */
    public void setUpdatedBy(String value) {
        setAttributeInternal(UPDATEDBY, value);
    }

    /**
     * Gets the attribute value for Attribute1, using the alias name Attribute1.
     * @return the value of Attribute1
     */
    public String getAttribute1() {
        return (String) getAttributeInternal(ATTRIBUTE1);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute1.
     * @param value value to set the Attribute1
     */
    public void setAttribute1(String value) {
        setAttributeInternal(ATTRIBUTE1, value);
    }

    /**
     * Gets the attribute value for Attribute2, using the alias name Attribute2.
     * @return the value of Attribute2
     */
    public String getAttribute2() {
        return (String) getAttributeInternal(ATTRIBUTE2);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute2.
     * @param value value to set the Attribute2
     */
    public void setAttribute2(String value) {
        setAttributeInternal(ATTRIBUTE2, value);
    }

    /**
     * Gets the attribute value for Attribute3, using the alias name Attribute3.
     * @return the value of Attribute3
     */
    public String getAttribute3() {
        return (String) getAttributeInternal(ATTRIBUTE3);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute3.
     * @param value value to set the Attribute3
     */
    public void setAttribute3(String value) {
        setAttributeInternal(ATTRIBUTE3, value);
    }

    /**
     * Gets the attribute value for Attribute4, using the alias name Attribute4.
     * @return the value of Attribute4
     */
    public String getAttribute4() {
        return (String) getAttributeInternal(ATTRIBUTE4);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute4.
     * @param value value to set the Attribute4
     */
    public void setAttribute4(String value) {
        setAttributeInternal(ATTRIBUTE4, value);
    }

    /**
     * Gets the attribute value for Attribute5, using the alias name Attribute5.
     * @return the value of Attribute5
     */
    public String getAttribute5() {
        return (String) getAttributeInternal(ATTRIBUTE5);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute5.
     * @param value value to set the Attribute5
     */
    public void setAttribute5(String value) {
        setAttributeInternal(ATTRIBUTE5, value);
    }

    /**
     * Gets the attribute value for Attribute6, using the alias name Attribute6.
     * @return the value of Attribute6
     */
    public Date getAttribute6() {
        return (Date) getAttributeInternal(ATTRIBUTE6);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute6.
     * @param value value to set the Attribute6
     */
    public void setAttribute6(Date value) {
        setAttributeInternal(ATTRIBUTE6, value);
    }

    /**
     * Gets the attribute value for Attribute7, using the alias name Attribute7.
     * @return the value of Attribute7
     */
    public Date getAttribute7() {
        return (Date) getAttributeInternal(ATTRIBUTE7);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute7.
     * @param value value to set the Attribute7
     */
    public void setAttribute7(Date value) {
        setAttributeInternal(ATTRIBUTE7, value);
    }

    /**
     * Gets the attribute value for Attribute8, using the alias name Attribute8.
     * @return the value of Attribute8
     */
    public Date getAttribute8() {
        return (Date) getAttributeInternal(ATTRIBUTE8);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute8.
     * @param value value to set the Attribute8
     */
    public void setAttribute8(Date value) {
        setAttributeInternal(ATTRIBUTE8, value);
    }

    /**
     * Gets the attribute value for Attribute9, using the alias name Attribute9.
     * @return the value of Attribute9
     */
    public Date getAttribute9() {
        return (Date) getAttributeInternal(ATTRIBUTE9);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute9.
     * @param value value to set the Attribute9
     */
    public void setAttribute9(Date value) {
        setAttributeInternal(ATTRIBUTE9, value);
    }

    /**
     * Gets the attribute value for Attribute10, using the alias name Attribute10.
     * @return the value of Attribute10
     */
    public Date getAttribute10() {
        return (Date) getAttributeInternal(ATTRIBUTE10);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute10.
     * @param value value to set the Attribute10
     */
    public void setAttribute10(Date value) {
        setAttributeInternal(ATTRIBUTE10, value);
    }

    /**
     * Gets the attribute value for Attribute11, using the alias name Attribute11.
     * @return the value of Attribute11
     */
    public BigDecimal getAttribute11() {
        return (BigDecimal) getAttributeInternal(ATTRIBUTE11);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute11.
     * @param value value to set the Attribute11
     */
    public void setAttribute11(BigDecimal value) {
        setAttributeInternal(ATTRIBUTE11, value);
    }

    /**
     * Gets the attribute value for Attribute12, using the alias name Attribute12.
     * @return the value of Attribute12
     */
    public BigDecimal getAttribute12() {
        return (BigDecimal) getAttributeInternal(ATTRIBUTE12);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute12.
     * @param value value to set the Attribute12
     */
    public void setAttribute12(BigDecimal value) {
        setAttributeInternal(ATTRIBUTE12, value);
    }

    /**
     * Gets the attribute value for Attribute13, using the alias name Attribute13.
     * @return the value of Attribute13
     */
    public BigDecimal getAttribute13() {
        return (BigDecimal) getAttributeInternal(ATTRIBUTE13);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute13.
     * @param value value to set the Attribute13
     */
    public void setAttribute13(BigDecimal value) {
        setAttributeInternal(ATTRIBUTE13, value);
    }

    /**
     * Gets the attribute value for Attribute14, using the alias name Attribute14.
     * @return the value of Attribute14
     */
    public BigDecimal getAttribute14() {
        return (BigDecimal) getAttributeInternal(ATTRIBUTE14);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute14.
     * @param value value to set the Attribute14
     */
    public void setAttribute14(BigDecimal value) {
        setAttributeInternal(ATTRIBUTE14, value);
    }

    /**
     * Gets the attribute value for Attribute15, using the alias name Attribute15.
     * @return the value of Attribute15
     */
    public BigDecimal getAttribute15() {
        return (BigDecimal) getAttributeInternal(ATTRIBUTE15);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute15.
     * @param value value to set the Attribute15
     */
    public void setAttribute15(BigDecimal value) {
        setAttributeInternal(ATTRIBUTE15, value);
    }

    /**
     * Gets the attribute value for TargetGlAccountDr, using the alias name TargetGlAccountDr.
     * @return the value of TargetGlAccountDr
     */
    public String getTargetGlAccountDr() {
        return (String) getAttributeInternal(TARGETGLACCOUNTDR);
    }

    /**
     * Sets <code>value</code> as the attribute value for TargetGlAccountDr.
     * @param value value to set the TargetGlAccountDr
     */
    public void setTargetGlAccountDr(String value) {
        setAttributeInternal(TARGETGLACCOUNTDR, value);
    }

    /**
     * Gets the attribute value for AllocationStatus, using the alias name AllocationStatus.
     * @return the value of AllocationStatus
     */
    public String getAllocationStatus() {
        return (String) getAttributeInternal(ALLOCATIONSTATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for AllocationStatus.
     * @param value value to set the AllocationStatus
     */
    public void setAllocationStatus(String value) {
        setAttributeInternal(ALLOCATIONSTATUS, value);
    }

    /**
     * @param drtcrossChargeId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer drtcrossChargeId) {
        return new Key(new Object[] { drtcrossChargeId });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("com.sgs.ics.model.bc.entity.SgsDrtCrossChargeEO");
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        try {
            SGSAppModuleImpl am = new SGSAppModuleImpl();
            setDrtcrossChargeId(am.getDBSequence1("SEQ_SGS_DRTCROSS_CHARGE_TBL"));
            CommonUtils util = new CommonUtils();
            Object user = (Object) util.getSessionScopeValue("_username").toString();
            setCreatedBy(user.toString());
            setCreatedDate(new java.sql.Date(new java.util.Date().getTime()));
        } catch (Exception e) {
            // TODO: Add catch code
            e.printStackTrace();
        }
    }
}

