package com.sgs.ics.model.bc.entity;

import java.math.BigDecimal;

import java.sql.Date;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Jan 19 13:27:38 IST 2023
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SgsOtrTargetEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        TbcaId,
        ToBusinessUnit,
        ToOperatingUnit,
        ToJobCode,
        ToDeptId,
        DrGlAccount,
        BaseCurrency,
        TransactionCurrency,
        TargetAmount,
        CreatedDate,
        CreatedBy,
        UpdatedDate,
        UpdatedBy,
        SgsTransBCostAllocation;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int TBCAID = AttributesEnum.TbcaId.index();
    public static final int TOBUSINESSUNIT = AttributesEnum.ToBusinessUnit.index();
    public static final int TOOPERATINGUNIT = AttributesEnum.ToOperatingUnit.index();
    public static final int TOJOBCODE = AttributesEnum.ToJobCode.index();
    public static final int TODEPTID = AttributesEnum.ToDeptId.index();
    public static final int DRGLACCOUNT = AttributesEnum.DrGlAccount.index();
    public static final int BASECURRENCY = AttributesEnum.BaseCurrency.index();
    public static final int TRANSACTIONCURRENCY = AttributesEnum.TransactionCurrency.index();
    public static final int TARGETAMOUNT = AttributesEnum.TargetAmount.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int UPDATEDDATE = AttributesEnum.UpdatedDate.index();
    public static final int UPDATEDBY = AttributesEnum.UpdatedBy.index();
    public static final int SGSTRANSBCOSTALLOCATION = AttributesEnum.SgsTransBCostAllocation.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SgsOtrTargetEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("com.sgs.ics.model.bc.entity.SgsOtrTargetEO");
    }


    /**
     * Gets the attribute value for TbcaId, using the alias name TbcaId.
     * @return the value of TbcaId
     */
    public String getTbcaId() {
        return (String) getAttributeInternal(TBCAID);
    }

    /**
     * Sets <code>value</code> as the attribute value for TbcaId.
     * @param value value to set the TbcaId
     */
    public void setTbcaId(String value) {
        setAttributeInternal(TBCAID, value);
    }

    /**
     * Gets the attribute value for ToBusinessUnit, using the alias name ToBusinessUnit.
     * @return the value of ToBusinessUnit
     */
    public String getToBusinessUnit() {
        return (String) getAttributeInternal(TOBUSINESSUNIT);
    }

    /**
     * Sets <code>value</code> as the attribute value for ToBusinessUnit.
     * @param value value to set the ToBusinessUnit
     */
    public void setToBusinessUnit(String value) {
        setAttributeInternal(TOBUSINESSUNIT, value);
    }

    /**
     * Gets the attribute value for ToOperatingUnit, using the alias name ToOperatingUnit.
     * @return the value of ToOperatingUnit
     */
    public String getToOperatingUnit() {
        return (String) getAttributeInternal(TOOPERATINGUNIT);
    }

    /**
     * Sets <code>value</code> as the attribute value for ToOperatingUnit.
     * @param value value to set the ToOperatingUnit
     */
    public void setToOperatingUnit(String value) {
        setAttributeInternal(TOOPERATINGUNIT, value);
    }

    /**
     * Gets the attribute value for ToJobCode, using the alias name ToJobCode.
     * @return the value of ToJobCode
     */
    public String getToJobCode() {
        return (String) getAttributeInternal(TOJOBCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ToJobCode.
     * @param value value to set the ToJobCode
     */
    public void setToJobCode(String value) {
        setAttributeInternal(TOJOBCODE, value);
    }

    /**
     * Gets the attribute value for ToDeptId, using the alias name ToDeptId.
     * @return the value of ToDeptId
     */
    public String getToDeptId() {
        return (String) getAttributeInternal(TODEPTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ToDeptId.
     * @param value value to set the ToDeptId
     */
    public void setToDeptId(String value) {
        setAttributeInternal(TODEPTID, value);
    }

    /**
     * Gets the attribute value for DrGlAccount, using the alias name DrGlAccount.
     * @return the value of DrGlAccount
     */
    public String getDrGlAccount() {
        return (String) getAttributeInternal(DRGLACCOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for DrGlAccount.
     * @param value value to set the DrGlAccount
     */
    public void setDrGlAccount(String value) {
        setAttributeInternal(DRGLACCOUNT, value);
    }

    /**
     * Gets the attribute value for BaseCurrency, using the alias name BaseCurrency.
     * @return the value of BaseCurrency
     */
    public String getBaseCurrency() {
        return (String) getAttributeInternal(BASECURRENCY);
    }

    /**
     * Sets <code>value</code> as the attribute value for BaseCurrency.
     * @param value value to set the BaseCurrency
     */
    public void setBaseCurrency(String value) {
        setAttributeInternal(BASECURRENCY, value);
    }

    /**
     * Gets the attribute value for TransactionCurrency, using the alias name TransactionCurrency.
     * @return the value of TransactionCurrency
     */
    public String getTransactionCurrency() {
        return (String) getAttributeInternal(TRANSACTIONCURRENCY);
    }

    /**
     * Sets <code>value</code> as the attribute value for TransactionCurrency.
     * @param value value to set the TransactionCurrency
     */
    public void setTransactionCurrency(String value) {
        setAttributeInternal(TRANSACTIONCURRENCY, value);
    }

    /**
     * Gets the attribute value for TargetAmount, using the alias name TargetAmount.
     * @return the value of TargetAmount
     */
    public BigDecimal getTargetAmount() {
        return (BigDecimal) getAttributeInternal(TARGETAMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for TargetAmount.
     * @param value value to set the TargetAmount
     */
    public void setTargetAmount(BigDecimal value) {
        setAttributeInternal(TARGETAMOUNT, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the value of CreatedDate
     */
    public Date getCreatedDate() {
        return (Date) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedDate.
     * @param value value to set the CreatedDate
     */
    public void setCreatedDate(Date value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for UpdatedDate, using the alias name UpdatedDate.
     * @return the value of UpdatedDate
     */
    public Date getUpdatedDate() {
        return (Date) getAttributeInternal(UPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UpdatedDate.
     * @param value value to set the UpdatedDate
     */
    public void setUpdatedDate(Date value) {
        setAttributeInternal(UPDATEDDATE, value);
    }

    /**
     * Gets the attribute value for UpdatedBy, using the alias name UpdatedBy.
     * @return the value of UpdatedBy
     */
    public String getUpdatedBy() {
        return (String) getAttributeInternal(UPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for UpdatedBy.
     * @param value value to set the UpdatedBy
     */
    public void setUpdatedBy(String value) {
        setAttributeInternal(UPDATEDBY, value);
    }

    /**
     * @return the associated entity SgsTransBCostAllocationImpl.
     */
    public SgsTransBCostAllocationImpl getSgsTransBCostAllocation() {
        return (SgsTransBCostAllocationImpl) getAttributeInternal(SGSTRANSBCOSTALLOCATION);
    }

    /**
     * Sets <code>value</code> as the associated entity SgsTransBCostAllocationImpl.
     */
    public void setSgsTransBCostAllocation(SgsTransBCostAllocationImpl value) {
        setAttributeInternal(SGSTRANSBCOSTALLOCATION, value);
    }


    /**
     * @param tbcaId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String tbcaId) {
        return new Key(new Object[] { tbcaId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }
}

