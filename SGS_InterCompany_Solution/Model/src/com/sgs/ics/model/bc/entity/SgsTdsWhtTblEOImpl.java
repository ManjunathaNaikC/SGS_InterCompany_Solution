package com.sgs.ics.model.bc.entity;

import com.sgs.ics.model.bc.am.SGSAppModuleImpl;

import com.sgs.ics.model.bc.commonutils.CommonUtils;

import java.math.BigDecimal;

import java.sql.Date;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Dec 26 09:52:28 IST 2022
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SgsTdsWhtTblEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        TdsWhtId,
        TdsWhtSeq,
        ServReceiver,
        ServProvider,
        DeductionPoint,
        TaxBase,
        WhtLibilityAcc,
        WhtCreditAcc,
        RecoveryRate,
        WhtExpenseAcc,
        EffectiveFrom,
        EffectiveTo,
        CreatedDate,
        CreatedBy,
        UpdatedDate,
        Attribute1,
        Attribute2,
        Attribute3,
        Attribute4,
        Attribute5,
        Attribute6,
        Attribute7,
        Attribute8,
        Attribute9,
        Attribute10,
        Attribute11,
        Attribute12,
        Attribute13,
        Attribute14,
        Attribute15,
        UPDATEDBY,
        SgsTdsWhtIdentificationEO,
        SgsTdsWhtRateApplicabilityEO;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    private static final ADFLogger LOG = ADFLogger.createADFLogger(SgsTdsWhtTblEOImpl.class);


    public static final int TDSWHTID = AttributesEnum.TdsWhtId.index();
    public static final int TDSWHTSEQ = AttributesEnum.TdsWhtSeq.index();
    public static final int SERVRECEIVER = AttributesEnum.ServReceiver.index();
    public static final int SERVPROVIDER = AttributesEnum.ServProvider.index();
    public static final int DEDUCTIONPOINT = AttributesEnum.DeductionPoint.index();
    public static final int TAXBASE = AttributesEnum.TaxBase.index();
    public static final int WHTLIBILITYACC = AttributesEnum.WhtLibilityAcc.index();
    public static final int WHTCREDITACC = AttributesEnum.WhtCreditAcc.index();
    public static final int RECOVERYRATE = AttributesEnum.RecoveryRate.index();
    public static final int WHTEXPENSEACC = AttributesEnum.WhtExpenseAcc.index();
    public static final int EFFECTIVEFROM = AttributesEnum.EffectiveFrom.index();
    public static final int EFFECTIVETO = AttributesEnum.EffectiveTo.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int UPDATEDDATE = AttributesEnum.UpdatedDate.index();
    public static final int ATTRIBUTE1 = AttributesEnum.Attribute1.index();
    public static final int ATTRIBUTE2 = AttributesEnum.Attribute2.index();
    public static final int ATTRIBUTE3 = AttributesEnum.Attribute3.index();
    public static final int ATTRIBUTE4 = AttributesEnum.Attribute4.index();
    public static final int ATTRIBUTE5 = AttributesEnum.Attribute5.index();
    public static final int ATTRIBUTE6 = AttributesEnum.Attribute6.index();
    public static final int ATTRIBUTE7 = AttributesEnum.Attribute7.index();
    public static final int ATTRIBUTE8 = AttributesEnum.Attribute8.index();
    public static final int ATTRIBUTE9 = AttributesEnum.Attribute9.index();
    public static final int ATTRIBUTE10 = AttributesEnum.Attribute10.index();
    public static final int ATTRIBUTE11 = AttributesEnum.Attribute11.index();
    public static final int ATTRIBUTE12 = AttributesEnum.Attribute12.index();
    public static final int ATTRIBUTE13 = AttributesEnum.Attribute13.index();
    public static final int ATTRIBUTE14 = AttributesEnum.Attribute14.index();
    public static final int ATTRIBUTE15 = AttributesEnum.Attribute15.index();
    public static final int UPDATEDBY = AttributesEnum.UPDATEDBY.index();
    public static final int SGSTDSWHTIDENTIFICATIONEO = AttributesEnum.SgsTdsWhtIdentificationEO.index();
    public static final int SGSTDSWHTRATEAPPLICABILITYEO = AttributesEnum.SgsTdsWhtRateApplicabilityEO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SgsTdsWhtTblEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("com.sgs.ics.model.bc.entity.SgsTdsWhtTblEO");
    }


    /**
     * Gets the attribute value for TdsWhtId, using the alias name TdsWhtId.
     * @return the value of TdsWhtId
     */
    public String getTdsWhtId() {
        return (String) getAttributeInternal(TDSWHTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for TdsWhtId.
     * @param value value to set the TdsWhtId
     */
    public void setTdsWhtId(String value) {
        setAttributeInternal(TDSWHTID, value);
    }

    /**
     * Gets the attribute value for TdsWhtSeq, using the alias name TdsWhtSeq.
     * @return the value of TdsWhtSeq
     */
    public Integer getTdsWhtSeq() {
        return (Integer) getAttributeInternal(TDSWHTSEQ);
    }

    /**
     * Sets <code>value</code> as the attribute value for TdsWhtSeq.
     * @param value value to set the TdsWhtSeq
     */
    public void setTdsWhtSeq(Integer value) {
        setAttributeInternal(TDSWHTSEQ, value);
    }

    /**
     * Gets the attribute value for ServReceiver, using the alias name ServReceiver.
     * @return the value of ServReceiver
     */
    public String getServReceiver() {
        return (String) getAttributeInternal(SERVRECEIVER);
    }

    /**
     * Sets <code>value</code> as the attribute value for ServReceiver.
     * @param value value to set the ServReceiver
     */
    public void setServReceiver(String value) {
        setAttributeInternal(SERVRECEIVER, value);
    }

    /**
     * Gets the attribute value for ServProvider, using the alias name ServProvider.
     * @return the value of ServProvider
     */
    public String getServProvider() {
        return (String) getAttributeInternal(SERVPROVIDER);
    }

    /**
     * Sets <code>value</code> as the attribute value for ServProvider.
     * @param value value to set the ServProvider
     */
    public void setServProvider(String value) {
        setAttributeInternal(SERVPROVIDER, value);
    }

    /**
     * Gets the attribute value for DeductionPoint, using the alias name DeductionPoint.
     * @return the value of DeductionPoint
     */
    public String getDeductionPoint() {
        return (String) getAttributeInternal(DEDUCTIONPOINT);
    }

    /**
     * Sets <code>value</code> as the attribute value for DeductionPoint.
     * @param value value to set the DeductionPoint
     */
    public void setDeductionPoint(String value) {
        setAttributeInternal(DEDUCTIONPOINT, value);
    }

    /**
     * Gets the attribute value for TaxBase, using the alias name TaxBase.
     * @return the value of TaxBase
     */
    public String getTaxBase() {
        return (String) getAttributeInternal(TAXBASE);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxBase.
     * @param value value to set the TaxBase
     */
    public void setTaxBase(String value) {
        setAttributeInternal(TAXBASE, value);
    }

    /**
     * Gets the attribute value for WhtLibilityAcc, using the alias name WhtLibilityAcc.
     * @return the value of WhtLibilityAcc
     */
    public String getWhtLibilityAcc() {
        return (String) getAttributeInternal(WHTLIBILITYACC);
    }

    /**
     * Sets <code>value</code> as the attribute value for WhtLibilityAcc.
     * @param value value to set the WhtLibilityAcc
     */
    public void setWhtLibilityAcc(String value) {
        setAttributeInternal(WHTLIBILITYACC, value);
    }

    /**
     * Gets the attribute value for WhtCreditAcc, using the alias name WhtCreditAcc.
     * @return the value of WhtCreditAcc
     */
    public String getWhtCreditAcc() {
        return (String) getAttributeInternal(WHTCREDITACC);
    }

    /**
     * Sets <code>value</code> as the attribute value for WhtCreditAcc.
     * @param value value to set the WhtCreditAcc
     */
    public void setWhtCreditAcc(String value) {
        setAttributeInternal(WHTCREDITACC, value);
    }

    /**
     * Gets the attribute value for RecoveryRate, using the alias name RecoveryRate.
     * @return the value of RecoveryRate
     */
    public BigDecimal getRecoveryRate() {
        return (BigDecimal) getAttributeInternal(RECOVERYRATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for RecoveryRate.
     * @param value value to set the RecoveryRate
     */
    public void setRecoveryRate(BigDecimal value) {
        setAttributeInternal(RECOVERYRATE, value);
    }

    /**
     * Gets the attribute value for WhtExpenseAcc, using the alias name WhtExpenseAcc.
     * @return the value of WhtExpenseAcc
     */
    public String getWhtExpenseAcc() {
        return (String) getAttributeInternal(WHTEXPENSEACC);
    }

    /**
     * Sets <code>value</code> as the attribute value for WhtExpenseAcc.
     * @param value value to set the WhtExpenseAcc
     */
    public void setWhtExpenseAcc(String value) {
        setAttributeInternal(WHTEXPENSEACC, value);
    }

    /**
     * Gets the attribute value for EffectiveFrom, using the alias name EffectiveFrom.
     * @return the value of EffectiveFrom
     */
    public Date getEffectiveFrom() {
        return (Date) getAttributeInternal(EFFECTIVEFROM);
    }

    /**
     * Sets <code>value</code> as the attribute value for EffectiveFrom.
     * @param value value to set the EffectiveFrom
     */
    public void setEffectiveFrom(Date value) {
        setAttributeInternal(EFFECTIVEFROM, value);
    }

    /**
     * Gets the attribute value for EffectiveTo, using the alias name EffectiveTo.
     * @return the value of EffectiveTo
     */
    public Date getEffectiveTo() {
        return (Date) getAttributeInternal(EFFECTIVETO);
    }

    /**
     * Sets <code>value</code> as the attribute value for EffectiveTo.
     * @param value value to set the EffectiveTo
     */
    public void setEffectiveTo(Date value) {
        setAttributeInternal(EFFECTIVETO, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the value of CreatedDate
     */
    public Date getCreatedDate() {
        return (Date) getAttributeInternal(CREATEDDATE);
    }


    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    public void setUpdatedBy(String value) {
        setAttributeInternal(UPDATEDBY, value);
    }


    /**
     * Gets the attribute value for UpdatedDate, using the alias name UpdatedDate.
     * @return the value of UpdatedDate
     */
    public Date getUpdatedDate() {
        return (Date) getAttributeInternal(UPDATEDDATE);
    }


    /**
     * Gets the attribute value for Attribute1, using the alias name Attribute1.
     * @return the value of Attribute1
     */
    public String getAttribute1() {
        return (String) getAttributeInternal(ATTRIBUTE1);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute1.
     * @param value value to set the Attribute1
     */
    public void setAttribute1(String value) {
        setAttributeInternal(ATTRIBUTE1, value);
    }

    /**
     * Gets the attribute value for Attribute2, using the alias name Attribute2.
     * @return the value of Attribute2
     */
    public String getAttribute2() {
        return (String) getAttributeInternal(ATTRIBUTE2);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute2.
     * @param value value to set the Attribute2
     */
    public void setAttribute2(String value) {
        setAttributeInternal(ATTRIBUTE2, value);
    }

    /**
     * Gets the attribute value for Attribute3, using the alias name Attribute3.
     * @return the value of Attribute3
     */
    public String getAttribute3() {
        return (String) getAttributeInternal(ATTRIBUTE3);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute3.
     * @param value value to set the Attribute3
     */
    public void setAttribute3(String value) {
        setAttributeInternal(ATTRIBUTE3, value);
    }

    /**
     * Gets the attribute value for Attribute4, using the alias name Attribute4.
     * @return the value of Attribute4
     */
    public String getAttribute4() {
        return (String) getAttributeInternal(ATTRIBUTE4);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute4.
     * @param value value to set the Attribute4
     */
    public void setAttribute4(String value) {
        setAttributeInternal(ATTRIBUTE4, value);
    }

    /**
     * Gets the attribute value for Attribute5, using the alias name Attribute5.
     * @return the value of Attribute5
     */
    public String getAttribute5() {
        return (String) getAttributeInternal(ATTRIBUTE5);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute5.
     * @param value value to set the Attribute5
     */
    public void setAttribute5(String value) {
        setAttributeInternal(ATTRIBUTE5, value);
    }

    /**
     * Gets the attribute value for Attribute6, using the alias name Attribute6.
     * @return the value of Attribute6
     */
    public Date getAttribute6() {
        return (Date) getAttributeInternal(ATTRIBUTE6);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute6.
     * @param value value to set the Attribute6
     */
    public void setAttribute6(Date value) {
        setAttributeInternal(ATTRIBUTE6, value);
    }

    /**
     * Gets the attribute value for Attribute7, using the alias name Attribute7.
     * @return the value of Attribute7
     */
    public Date getAttribute7() {
        return (Date) getAttributeInternal(ATTRIBUTE7);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute7.
     * @param value value to set the Attribute7
     */
    public void setAttribute7(Date value) {
        setAttributeInternal(ATTRIBUTE7, value);
    }

    /**
     * Gets the attribute value for Attribute8, using the alias name Attribute8.
     * @return the value of Attribute8
     */
    public Date getAttribute8() {
        return (Date) getAttributeInternal(ATTRIBUTE8);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute8.
     * @param value value to set the Attribute8
     */
    public void setAttribute8(Date value) {
        setAttributeInternal(ATTRIBUTE8, value);
    }

    /**
     * Gets the attribute value for Attribute9, using the alias name Attribute9.
     * @return the value of Attribute9
     */
    public Date getAttribute9() {
        return (Date) getAttributeInternal(ATTRIBUTE9);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute9.
     * @param value value to set the Attribute9
     */
    public void setAttribute9(Date value) {
        setAttributeInternal(ATTRIBUTE9, value);
    }

    /**
     * Gets the attribute value for Attribute10, using the alias name Attribute10.
     * @return the value of Attribute10
     */
    public Date getAttribute10() {
        return (Date) getAttributeInternal(ATTRIBUTE10);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute10.
     * @param value value to set the Attribute10
     */
    public void setAttribute10(Date value) {
        setAttributeInternal(ATTRIBUTE10, value);
    }

    /**
     * Gets the attribute value for Attribute11, using the alias name Attribute11.
     * @return the value of Attribute11
     */
    public BigDecimal getAttribute11() {
        return (BigDecimal) getAttributeInternal(ATTRIBUTE11);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute11.
     * @param value value to set the Attribute11
     */
    public void setAttribute11(BigDecimal value) {
        setAttributeInternal(ATTRIBUTE11, value);
    }

    /**
     * Gets the attribute value for Attribute12, using the alias name Attribute12.
     * @return the value of Attribute12
     */
    public BigDecimal getAttribute12() {
        return (BigDecimal) getAttributeInternal(ATTRIBUTE12);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute12.
     * @param value value to set the Attribute12
     */
    public void setAttribute12(BigDecimal value) {
        setAttributeInternal(ATTRIBUTE12, value);
    }

    /**
     * Gets the attribute value for Attribute13, using the alias name Attribute13.
     * @return the value of Attribute13
     */
    public BigDecimal getAttribute13() {
        return (BigDecimal) getAttributeInternal(ATTRIBUTE13);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute13.
     * @param value value to set the Attribute13
     */
    public void setAttribute13(BigDecimal value) {
        setAttributeInternal(ATTRIBUTE13, value);
    }

    /**
     * Gets the attribute value for Attribute14, using the alias name Attribute14.
     * @return the value of Attribute14
     */
    public BigDecimal getAttribute14() {
        return (BigDecimal) getAttributeInternal(ATTRIBUTE14);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute14.
     * @param value value to set the Attribute14
     */
    public void setAttribute14(BigDecimal value) {
        setAttributeInternal(ATTRIBUTE14, value);
    }

    /**
     * Gets the attribute value for Attribute15, using the alias name Attribute15.
     * @return the value of Attribute15
     */
    public BigDecimal getAttribute15() {
        return (BigDecimal) getAttributeInternal(ATTRIBUTE15);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute15.
     * @param value value to set the Attribute15
     */
    public void setAttribute15(BigDecimal value) {
        setAttributeInternal(ATTRIBUTE15, value);
    }

    /**
     * Gets the attribute value for UPDATEDBY, using the alias name UPDATEDBY.
     * @return the value of UPDATEDBY
     */
////    public String getUPDATEDBY() {
////        return (String) getAttributeInternal(UPDATEDBY);
////    }
////
////    /**
////     * Sets <code>value</code> as the attribute value for UPDATEDBY.
////     * @param value value to set the UPDATEDBY
//     */
//    public void setUPDATEDBY(String value) {
//        setAttributeInternal(UPDATEDBY, value);
//    }

    /**
     * Gets the attribute value for UPDATEDBY, using the alias name UPDATEDBY.
     * @return the value of UPDATEDBY
     */
    public String getUPDATEDBY() {
        return (String) getAttributeInternal(UPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for UPDATEDBY.
     * @param value value to set the UPDATEDBY
     */
    public void setUPDATEDBY(String value) {
        setAttributeInternal(UPDATEDBY, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getSgsTdsWhtIdentificationEO() {
        return (RowIterator) getAttributeInternal(SGSTDSWHTIDENTIFICATIONEO);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getSgsTdsWhtRateApplicabilityEO() {
        return (RowIterator) getAttributeInternal(SGSTDSWHTRATEAPPLICABILITYEO);
    }


    /**
     * @param tdsWhtSeq key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer tdsWhtSeq) {
        return new Key(new Object[] { tdsWhtSeq });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        try {
            SGSAppModuleImpl am = new SGSAppModuleImpl();
            setTdsWhtSeq(am.getDBSequence1("SEQ_SGS_TDS_WHT_TBL"));
            CommonUtils util= new CommonUtils();
            Object user= (Object)util.getSessionScopeValue("_username").toString();
            setCreatedBy(user.toString());
        } catch (Exception e) {
            LOG.severe(e);
        }
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if (operation == DML_UPDATE) {
            CommonUtils util = new CommonUtils();
            Object user = (Object) util.getSessionScopeValue("_username").toString();
            setUpdatedBy(user.toString());
        }

        super.doDML(operation, e);
    }
}

