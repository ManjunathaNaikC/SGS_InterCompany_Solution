package com.sgs.ics.model.bc.entity;

import com.sgs.ics.model.bc.am.SGSAppModuleImpl;
import com.sgs.ics.model.bc.commonutils.CommonUtils;

import java.math.BigDecimal;

import java.sql.Date;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Jan 17 22:58:10 IST 2023
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SgsTransReceivablesTempEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        TbcaId,
        FromBusinessUnit,
        FromJobCode,
        CrGlAccount,
        FromOperatingUnit,
        FromDepartmentId,
        ToBusinessUnit,
        ToOperatingUnit,
        ToJobCode,
        ToDeptId,
        DrGlAccount,
        BaseCurrency,
        ToTransactionCurrency,
        TargetAmount,
        BookCode,
        TransactionPeriod,
        NatureOfExpense,
        GlDate,
        TransactionDate,
        FromTransactionCurrency,
        TransactionAmount,
        FunctionalCurrency,
        AccountTreatment,
        PeoplesoftTransactionId,
        VendorId,
        PoNumber,
        VoucherId,
        VoucherNo,
        SourceModule,
        CreatedDate,
        CreatedBy,
        UpdatedDate,
        UpdatedBy;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    private static final ADFLogger LOG = ADFLogger.createADFLogger(SgsTransReceivablesTempEOImpl.class);


    public static final int TBCAID = AttributesEnum.TbcaId.index();
    public static final int FROMBUSINESSUNIT = AttributesEnum.FromBusinessUnit.index();
    public static final int FROMJOBCODE = AttributesEnum.FromJobCode.index();
    public static final int CRGLACCOUNT = AttributesEnum.CrGlAccount.index();
    public static final int FROMOPERATINGUNIT = AttributesEnum.FromOperatingUnit.index();
    public static final int FROMDEPARTMENTID = AttributesEnum.FromDepartmentId.index();
    public static final int TOBUSINESSUNIT = AttributesEnum.ToBusinessUnit.index();
    public static final int TOOPERATINGUNIT = AttributesEnum.ToOperatingUnit.index();
    public static final int TOJOBCODE = AttributesEnum.ToJobCode.index();
    public static final int TODEPTID = AttributesEnum.ToDeptId.index();
    public static final int DRGLACCOUNT = AttributesEnum.DrGlAccount.index();
    public static final int BASECURRENCY = AttributesEnum.BaseCurrency.index();
    public static final int TOTRANSACTIONCURRENCY = AttributesEnum.ToTransactionCurrency.index();
    public static final int TARGETAMOUNT = AttributesEnum.TargetAmount.index();
    public static final int BOOKCODE = AttributesEnum.BookCode.index();
    public static final int TRANSACTIONPERIOD = AttributesEnum.TransactionPeriod.index();
    public static final int NATUREOFEXPENSE = AttributesEnum.NatureOfExpense.index();
    public static final int GLDATE = AttributesEnum.GlDate.index();
    public static final int TRANSACTIONDATE = AttributesEnum.TransactionDate.index();
    public static final int FROMTRANSACTIONCURRENCY = AttributesEnum.FromTransactionCurrency.index();
    public static final int TRANSACTIONAMOUNT = AttributesEnum.TransactionAmount.index();
    public static final int FUNCTIONALCURRENCY = AttributesEnum.FunctionalCurrency.index();
    public static final int ACCOUNTTREATMENT = AttributesEnum.AccountTreatment.index();
    public static final int PEOPLESOFTTRANSACTIONID = AttributesEnum.PeoplesoftTransactionId.index();
    public static final int VENDORID = AttributesEnum.VendorId.index();
    public static final int PONUMBER = AttributesEnum.PoNumber.index();
    public static final int VOUCHERID = AttributesEnum.VoucherId.index();
    public static final int VOUCHERNO = AttributesEnum.VoucherNo.index();
    public static final int SOURCEMODULE = AttributesEnum.SourceModule.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int UPDATEDDATE = AttributesEnum.UpdatedDate.index();
    public static final int UPDATEDBY = AttributesEnum.UpdatedBy.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SgsTransReceivablesTempEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("com.sgs.ics.model.bc.entity.SgsTransReceivablesTempEO");
    }


    /**
     * Gets the attribute value for TbcaId, using the alias name TbcaId.
     * @return the value of TbcaId
     */
    public String getTbcaId() {
        return (String) getAttributeInternal(TBCAID);
    }

    /**
     * Sets <code>value</code> as the attribute value for TbcaId.
     * @param value value to set the TbcaId
     */
    public void setTbcaId(String value) {
        setAttributeInternal(TBCAID, value);
    }

    /**
     * Gets the attribute value for FromBusinessUnit, using the alias name FromBusinessUnit.
     * @return the value of FromBusinessUnit
     */
    public String getFromBusinessUnit() {
        return (String) getAttributeInternal(FROMBUSINESSUNIT);
    }

    /**
     * Sets <code>value</code> as the attribute value for FromBusinessUnit.
     * @param value value to set the FromBusinessUnit
     */
    public void setFromBusinessUnit(String value) {
        setAttributeInternal(FROMBUSINESSUNIT, value);
    }

    /**
     * Gets the attribute value for FromJobCode, using the alias name FromJobCode.
     * @return the value of FromJobCode
     */
    public String getFromJobCode() {
        return (String) getAttributeInternal(FROMJOBCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for FromJobCode.
     * @param value value to set the FromJobCode
     */
    public void setFromJobCode(String value) {
        setAttributeInternal(FROMJOBCODE, value);
    }

    /**
     * Gets the attribute value for CrGlAccount, using the alias name CrGlAccount.
     * @return the value of CrGlAccount
     */
    public String getCrGlAccount() {
        return (String) getAttributeInternal(CRGLACCOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for CrGlAccount.
     * @param value value to set the CrGlAccount
     */
    public void setCrGlAccount(String value) {
        setAttributeInternal(CRGLACCOUNT, value);
    }

    /**
     * Gets the attribute value for FromOperatingUnit, using the alias name FromOperatingUnit.
     * @return the value of FromOperatingUnit
     */
    public String getFromOperatingUnit() {
        return (String) getAttributeInternal(FROMOPERATINGUNIT);
    }

    /**
     * Sets <code>value</code> as the attribute value for FromOperatingUnit.
     * @param value value to set the FromOperatingUnit
     */
    public void setFromOperatingUnit(String value) {
        setAttributeInternal(FROMOPERATINGUNIT, value);
    }

    /**
     * Gets the attribute value for FromDepartmentId, using the alias name FromDepartmentId.
     * @return the value of FromDepartmentId
     */
    public String getFromDepartmentId() {
        return (String) getAttributeInternal(FROMDEPARTMENTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for FromDepartmentId.
     * @param value value to set the FromDepartmentId
     */
    public void setFromDepartmentId(String value) {
        setAttributeInternal(FROMDEPARTMENTID, value);
    }

    /**
     * Gets the attribute value for ToBusinessUnit, using the alias name ToBusinessUnit.
     * @return the value of ToBusinessUnit
     */
    public String getToBusinessUnit() {
        return (String) getAttributeInternal(TOBUSINESSUNIT);
    }

    /**
     * Sets <code>value</code> as the attribute value for ToBusinessUnit.
     * @param value value to set the ToBusinessUnit
     */
    public void setToBusinessUnit(String value) {
        setAttributeInternal(TOBUSINESSUNIT, value);
    }

    /**
     * Gets the attribute value for ToOperatingUnit, using the alias name ToOperatingUnit.
     * @return the value of ToOperatingUnit
     */
    public String getToOperatingUnit() {
        return (String) getAttributeInternal(TOOPERATINGUNIT);
    }

    /**
     * Sets <code>value</code> as the attribute value for ToOperatingUnit.
     * @param value value to set the ToOperatingUnit
     */
    public void setToOperatingUnit(String value) {
        setAttributeInternal(TOOPERATINGUNIT, value);
    }

    /**
     * Gets the attribute value for ToJobCode, using the alias name ToJobCode.
     * @return the value of ToJobCode
     */
    public String getToJobCode() {
        return (String) getAttributeInternal(TOJOBCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ToJobCode.
     * @param value value to set the ToJobCode
     */
    public void setToJobCode(String value) {
        setAttributeInternal(TOJOBCODE, value);
    }

    /**
     * Gets the attribute value for ToDeptId, using the alias name ToDeptId.
     * @return the value of ToDeptId
     */
    public String getToDeptId() {
        return (String) getAttributeInternal(TODEPTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ToDeptId.
     * @param value value to set the ToDeptId
     */
    public void setToDeptId(String value) {
        setAttributeInternal(TODEPTID, value);
    }

    /**
     * Gets the attribute value for DrGlAccount, using the alias name DrGlAccount.
     * @return the value of DrGlAccount
     */
    public String getDrGlAccount() {
        return (String) getAttributeInternal(DRGLACCOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for DrGlAccount.
     * @param value value to set the DrGlAccount
     */
    public void setDrGlAccount(String value) {
        setAttributeInternal(DRGLACCOUNT, value);
    }

    /**
     * Gets the attribute value for BaseCurrency, using the alias name BaseCurrency.
     * @return the value of BaseCurrency
     */
    public String getBaseCurrency() {
        return (String) getAttributeInternal(BASECURRENCY);
    }

    /**
     * Sets <code>value</code> as the attribute value for BaseCurrency.
     * @param value value to set the BaseCurrency
     */
    public void setBaseCurrency(String value) {
        setAttributeInternal(BASECURRENCY, value);
    }

    /**
     * Gets the attribute value for ToTransactionCurrency, using the alias name ToTransactionCurrency.
     * @return the value of ToTransactionCurrency
     */
    public String getToTransactionCurrency() {
        return (String) getAttributeInternal(TOTRANSACTIONCURRENCY);
    }

    /**
     * Sets <code>value</code> as the attribute value for ToTransactionCurrency.
     * @param value value to set the ToTransactionCurrency
     */
    public void setToTransactionCurrency(String value) {
        setAttributeInternal(TOTRANSACTIONCURRENCY, value);
    }

    /**
     * Gets the attribute value for TargetAmount, using the alias name TargetAmount.
     * @return the value of TargetAmount
     */
    public BigDecimal getTargetAmount() {
        return (BigDecimal) getAttributeInternal(TARGETAMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for TargetAmount.
     * @param value value to set the TargetAmount
     */
    public void setTargetAmount(BigDecimal value) {
        setAttributeInternal(TARGETAMOUNT, value);
    }

    /**
     * Gets the attribute value for BookCode, using the alias name BookCode.
     * @return the value of BookCode
     */
    public String getBookCode() {
        return (String) getAttributeInternal(BOOKCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for BookCode.
     * @param value value to set the BookCode
     */
    public void setBookCode(String value) {
        setAttributeInternal(BOOKCODE, value);
    }

    /**
     * Gets the attribute value for TransactionPeriod, using the alias name TransactionPeriod.
     * @return the value of TransactionPeriod
     */
    public String getTransactionPeriod() {
        return (String) getAttributeInternal(TRANSACTIONPERIOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for TransactionPeriod.
     * @param value value to set the TransactionPeriod
     */
    public void setTransactionPeriod(String value) {
        setAttributeInternal(TRANSACTIONPERIOD, value);
    }

    /**
     * Gets the attribute value for NatureOfExpense, using the alias name NatureOfExpense.
     * @return the value of NatureOfExpense
     */
    public String getNatureOfExpense() {
        return (String) getAttributeInternal(NATUREOFEXPENSE);
    }

    /**
     * Sets <code>value</code> as the attribute value for NatureOfExpense.
     * @param value value to set the NatureOfExpense
     */
    public void setNatureOfExpense(String value) {
        setAttributeInternal(NATUREOFEXPENSE, value);
    }

    /**
     * Gets the attribute value for GlDate, using the alias name GlDate.
     * @return the value of GlDate
     */
    public Date getGlDate() {
        return (Date) getAttributeInternal(GLDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlDate.
     * @param value value to set the GlDate
     */
    public void setGlDate(Date value) {
        setAttributeInternal(GLDATE, value);
    }

    /**
     * Gets the attribute value for TransactionDate, using the alias name TransactionDate.
     * @return the value of TransactionDate
     */
    public Date getTransactionDate() {
        return (Date) getAttributeInternal(TRANSACTIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for TransactionDate.
     * @param value value to set the TransactionDate
     */
    public void setTransactionDate(Date value) {
        setAttributeInternal(TRANSACTIONDATE, value);
    }

    /**
     * Gets the attribute value for FromTransactionCurrency, using the alias name FromTransactionCurrency.
     * @return the value of FromTransactionCurrency
     */
    public String getFromTransactionCurrency() {
        return (String) getAttributeInternal(FROMTRANSACTIONCURRENCY);
    }

    /**
     * Sets <code>value</code> as the attribute value for FromTransactionCurrency.
     * @param value value to set the FromTransactionCurrency
     */
    public void setFromTransactionCurrency(String value) {
        setAttributeInternal(FROMTRANSACTIONCURRENCY, value);
    }

    /**
     * Gets the attribute value for TransactionAmount, using the alias name TransactionAmount.
     * @return the value of TransactionAmount
     */
    public BigDecimal getTransactionAmount() {
        return (BigDecimal) getAttributeInternal(TRANSACTIONAMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for TransactionAmount.
     * @param value value to set the TransactionAmount
     */
    public void setTransactionAmount(BigDecimal value) {
        setAttributeInternal(TRANSACTIONAMOUNT, value);
    }

    /**
     * Gets the attribute value for FunctionalCurrency, using the alias name FunctionalCurrency.
     * @return the value of FunctionalCurrency
     */
    public String getFunctionalCurrency() {
        return (String) getAttributeInternal(FUNCTIONALCURRENCY);
    }

    /**
     * Sets <code>value</code> as the attribute value for FunctionalCurrency.
     * @param value value to set the FunctionalCurrency
     */
    public void setFunctionalCurrency(String value) {
        setAttributeInternal(FUNCTIONALCURRENCY, value);
    }

    /**
     * Gets the attribute value for AccountTreatment, using the alias name AccountTreatment.
     * @return the value of AccountTreatment
     */
    public String getAccountTreatment() {
        return (String) getAttributeInternal(ACCOUNTTREATMENT);
    }

    /**
     * Sets <code>value</code> as the attribute value for AccountTreatment.
     * @param value value to set the AccountTreatment
     */
    public void setAccountTreatment(String value) {
        setAttributeInternal(ACCOUNTTREATMENT, value);
    }

    /**
     * Gets the attribute value for PeoplesoftTransactionId, using the alias name PeoplesoftTransactionId.
     * @return the value of PeoplesoftTransactionId
     */
    public String getPeoplesoftTransactionId() {
        return (String) getAttributeInternal(PEOPLESOFTTRANSACTIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for PeoplesoftTransactionId.
     * @param value value to set the PeoplesoftTransactionId
     */
    public void setPeoplesoftTransactionId(String value) {
        setAttributeInternal(PEOPLESOFTTRANSACTIONID, value);
    }

    /**
     * Gets the attribute value for VendorId, using the alias name VendorId.
     * @return the value of VendorId
     */
    public String getVendorId() {
        return (String) getAttributeInternal(VENDORID);
    }

    /**
     * Sets <code>value</code> as the attribute value for VendorId.
     * @param value value to set the VendorId
     */
    public void setVendorId(String value) {
        setAttributeInternal(VENDORID, value);
    }

    /**
     * Gets the attribute value for PoNumber, using the alias name PoNumber.
     * @return the value of PoNumber
     */
    public String getPoNumber() {
        return (String) getAttributeInternal(PONUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for PoNumber.
     * @param value value to set the PoNumber
     */
    public void setPoNumber(String value) {
        setAttributeInternal(PONUMBER, value);
    }

    /**
     * Gets the attribute value for VoucherId, using the alias name VoucherId.
     * @return the value of VoucherId
     */
    public String getVoucherId() {
        return (String) getAttributeInternal(VOUCHERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for VoucherId.
     * @param value value to set the VoucherId
     */
    public void setVoucherId(String value) {
        setAttributeInternal(VOUCHERID, value);
    }

    /**
     * Gets the attribute value for VoucherNo, using the alias name VoucherNo.
     * @return the value of VoucherNo
     */
    public String getVoucherNo() {
        return (String) getAttributeInternal(VOUCHERNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for VoucherNo.
     * @param value value to set the VoucherNo
     */
    public void setVoucherNo(String value) {
        setAttributeInternal(VOUCHERNO, value);
    }

    /**
     * Gets the attribute value for SourceModule, using the alias name SourceModule.
     * @return the value of SourceModule
     */
    public String getSourceModule() {
        return (String) getAttributeInternal(SOURCEMODULE);
    }

    /**
     * Sets <code>value</code> as the attribute value for SourceModule.
     * @param value value to set the SourceModule
     */
    public void setSourceModule(String value) {
        setAttributeInternal(SOURCEMODULE, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the value of CreatedDate
     */
    public Date getCreatedDate() {
        return (Date) getAttributeInternal(CREATEDDATE);
    }


    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for UpdatedDate, using the alias name UpdatedDate.
     * @return the value of UpdatedDate
     */
    public Date getUpdatedDate() {
        return (Date) getAttributeInternal(UPDATEDDATE);
    }


    /**
     * Gets the attribute value for UpdatedBy, using the alias name UpdatedBy.
     * @return the value of UpdatedBy
     */
    public String getUpdatedBy() {
        return (String) getAttributeInternal(UPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for UpdatedBy.
     * @param value value to set the UpdatedBy
     */
    public void setUpdatedBy(String value) {
        setAttributeInternal(UPDATEDBY, value);
    }


    /**
     * @param tbcaId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String tbcaId) {
        return new Key(new Object[] { tbcaId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        try {
            SGSAppModuleImpl am = new SGSAppModuleImpl();
            //setCostIdentificationId("SGSID"+Math.random());
            setTbcaId("OTR_"+am.getDBSequence1("SEQ_SGS_TRANS_RECEIVABLES_TEMP_TBL"));
            CommonUtils util = new CommonUtils();
            Object user = (Object) util.getSessionScopeValue("_username").toString();
            setCreatedBy(user.toString());
        } catch (Exception e) {
            LOG.severe(e);
        }
    }
    
    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if (operation == DML_UPDATE) {
            CommonUtils util = new CommonUtils();
            Object user = (Object) util.getSessionScopeValue("_username").toString();
            setUpdatedBy(user.toString());
        }

        super.doDML(operation, e);
    }
}

